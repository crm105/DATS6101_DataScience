#Drop variables in drop list
drop.list <- c("BLDG_NUM", "SALE_NUM", "USECODE", "GIS_LAST_MOD_DTTM", "CMPLX_NUM",
"LIVING_GBA", "GBA", "CITY", "STATE", "NATIONALGRID", "X","Y",
"ASSESSMENT_SUBNBHD", "CENSUS_TRACT", "CENSUS_BLOCK", "SQUARE" , "X.1")
df <- df[,!colnames(df) %in% drop.list]
#Convert to factor :
convert.factor <- c("ZIPCODE", "QUALIFIED", "STYLE", "STRUCTURE")
df[,colnames(df) %in% convert.factor] <- as.factor(df[,colnames(df) %in% convert.factor])
#code to remove outliers
outliers <- c("PRICE")
lbound <- c()
ubound <- c()
IQR[i]
for (i in outliers){
IQR[i] <- quantile(df[,i],.75, na.rm = TRUE) - quantile(df[,i],.25, na.rm = TRUE)
lbound[i] <- as.numeric (quantile(df[,i], .25,na.rm = TRUE) - IQR[i]);
ubound[i] <- as.numeric(quantile(df[,i], .75, na.rm = TRUE) + IQR[i])
}
summary(df$PRICE)
ubound
library(dplyr); library(ggplot2); library("rgdal"); library("sp") ; library(tmap); library(leaflet)
df.orig <- df <- read.csv("dc_residential_data/DC_properties.csv")
df$SALEDATE <- as.Date(df$SALEDATE)
df$sale.year <- lubridate::year(df$SALEDATE)
#Filter out homes with no price, no full address, or sold earlier than 2015
df <- df %>% filter(!is.na(PRICE), !is.na(FULLADDRESS),  sale.year > 2015)
#Drop variables in drop list
drop.list <- c("BLDG_NUM", "SALE_NUM", "USECODE", "GIS_LAST_MOD_DTTM", "CMPLX_NUM",
"LIVING_GBA", "GBA", "CITY", "STATE", "NATIONALGRID", "X","Y",
"ASSESSMENT_SUBNBHD", "CENSUS_TRACT", "CENSUS_BLOCK", "SQUARE" , "X.1")
df <- df[,!colnames(df) %in% drop.list]
#Convert to factor :
convert.factor <- c("ZIPCODE", "QUALIFIED", "STYLE", "STRUCTURE")
df[,colnames(df) %in% convert.factor] <- as.factor(df[,colnames(df) %in% convert.factor])
#code to remove outliers
df$PRICE <- log(df$PRICE)
outliers <- c("PRICE")
lbound <- c()
ubound <- c()
IQR[i]
library(dplyr); library(ggplot2); library("rgdal"); library("sp") ; library(tmap); library(leaflet)
df.orig <- df <- read.csv("dc_residential_data/DC_properties.csv")
df$SALEDATE <- as.Date(df$SALEDATE)
df$sale.year <- lubridate::year(df$SALEDATE)
#Filter out homes with no price, no full address, or sold earlier than 2015
df <- df %>% filter(!is.na(PRICE), !is.na(FULLADDRESS),  sale.year > 2015)
#Drop variables in drop list
drop.list <- c("BLDG_NUM", "SALE_NUM", "USECODE", "GIS_LAST_MOD_DTTM", "CMPLX_NUM",
"LIVING_GBA", "GBA", "CITY", "STATE", "NATIONALGRID", "X","Y",
"ASSESSMENT_SUBNBHD", "CENSUS_TRACT", "CENSUS_BLOCK", "SQUARE" , "X.1")
df <- df[,!colnames(df) %in% drop.list]
#Convert to factor :
convert.factor <- c("ZIPCODE", "QUALIFIED", "STYLE", "STRUCTURE")
df[,colnames(df) %in% convert.factor] <- as.factor(df[,colnames(df) %in% convert.factor])
#code to remove outliers
df$PRICE <- log(df$PRICE)
outliers <- c("PRICE")
lbound <- c()
ubound <- c()
IQR[i]
library(dplyr); library(ggplot2); library("rgdal"); library("sp") ; library(tmap); library(leaflet)
df.orig <- df <- read.csv("dc_residential_data/DC_properties.csv")
df$SALEDATE <- as.Date(df$SALEDATE)
df$sale.year <- lubridate::year(df$SALEDATE)
#Filter out homes with no price, no full address, or sold earlier than 2015
df <- df %>% filter(!is.na(PRICE), !is.na(FULLADDRESS),  sale.year > 2015)
#Drop variables in drop list
drop.list <- c("BLDG_NUM", "SALE_NUM", "USECODE", "GIS_LAST_MOD_DTTM", "CMPLX_NUM",
"LIVING_GBA", "GBA", "CITY", "STATE", "NATIONALGRID", "X","Y",
"ASSESSMENT_SUBNBHD", "CENSUS_TRACT", "CENSUS_BLOCK", "SQUARE" , "X.1")
df <- df[,!colnames(df) %in% drop.list]
#Convert to factor :
convert.factor <- c("ZIPCODE", "QUALIFIED", "STYLE", "STRUCTURE")
df[,colnames(df) %in% convert.factor] <- as.factor(df[,colnames(df) %in% convert.factor])
#code to remove outliers
df$PRICE <- log(df$PRICE)
outliers <- c("PRICE")
lbound <- c()
ubound <- c()
IQR <- c()
for (i in outliers){
IQR[i] <- quantile(df[,i],.75, na.rm = TRUE) - quantile(df[,i],.25, na.rm = TRUE)
lbound[i] <- as.numeric (quantile(df[,i], .25,na.rm = TRUE) - IQR[i]);
ubound[i] <- as.numeric(quantile(df[,i], .75, na.rm = TRUE) + IQR[i])
df <- df[df[,] < ubound]
}
library(dplyr); library(ggplot2); library("rgdal"); library("sp") ; library(tmap); library(leaflet)
df.orig <- df <- read.csv("dc_residential_data/DC_properties.csv")
df$SALEDATE <- as.Date(df$SALEDATE)
df$sale.year <- lubridate::year(df$SALEDATE)
#Filter out homes with no price, no full address, or sold earlier than 2015
df <- df %>% filter(!is.na(PRICE), !is.na(FULLADDRESS),  sale.year > 2015)
#Drop variables in drop list
drop.list <- c("BLDG_NUM", "SALE_NUM", "USECODE", "GIS_LAST_MOD_DTTM", "CMPLX_NUM",
"LIVING_GBA", "GBA", "CITY", "STATE", "NATIONALGRID", "X","Y",
"ASSESSMENT_SUBNBHD", "CENSUS_TRACT", "CENSUS_BLOCK", "SQUARE" , "X.1")
df <- df[,!colnames(df) %in% drop.list]
#Convert to factor :
convert.factor <- c("ZIPCODE", "QUALIFIED", "STYLE", "STRUCTURE")
df[,colnames(df) %in% convert.factor] <- as.factor(df[,colnames(df) %in% convert.factor])
#code to remove outliers
df$PRICE <- log(df$PRICE)
outliers <- c("PRICE")
lbound <- c()
ubound <- c()
IQR <- c()
for (i in outliers){
IQR[i] <- quantile(df[,i],.75, na.rm = TRUE) - quantile(df[,i],.25, na.rm = TRUE)
lbound[i] <- as.numeric (quantile(df[,i], .25,na.rm = TRUE) - IQR[i]);
ubound[i] <- as.numeric(quantile(df[,i], .75, na.rm = TRUE) + IQR[i])
df <- df[df[,i] < ubound]
}
summary(df$PRICE)
ubound
for (i in outliers){
IQR[i] <- quantile(df[,i],.75, na.rm = TRUE) - quantile(df[,i],.25, na.rm = TRUE)
lbound[i] <- as.numeric (quantile(df[,i], .25,na.rm = TRUE) - IQR[i]);
ubound[i] <- as.numeric(quantile(df[,i], .75, na.rm = TRUE) + IQR[i])
df <- df[df[,i] < ubound]
}
for (i in outliers){
IQR[i] <- quantile(df[,i],.75, na.rm = TRUE) - quantile(df[,i],.25, na.rm = TRUE)
lbound[i] <- as.numeric (quantile(df[,i], .25,na.rm = TRUE) - IQR[i]);
ubound[i] <- as.numeric(quantile(df[,i], .75, na.rm = TRUE) + IQR[i])
df <- df[df[,i] < ubound,]
}
summary(df$PRICE)
ubound
hist(df$PRICE)
library(dplyr); library(ggplot2); library("rgdal"); library("sp") ; library(tmap); library(leaflet)
df.orig <- df <- read.csv("dc_residential_data/DC_properties.csv")
df$SALEDATE <- as.Date(df$SALEDATE)
df$sale.year <- lubridate::year(df$SALEDATE)
#Filter out homes with no price, no full address, or sold earlier than 2015
df <- df %>% filter(!is.na(PRICE), !is.na(FULLADDRESS),  sale.year > 2015)
#Drop variables in drop list
drop.list <- c("BLDG_NUM", "SALE_NUM", "USECODE", "GIS_LAST_MOD_DTTM", "CMPLX_NUM",
"LIVING_GBA", "GBA", "CITY", "STATE", "NATIONALGRID", "X","Y",
"ASSESSMENT_SUBNBHD", "CENSUS_TRACT", "CENSUS_BLOCK", "SQUARE" , "X.1")
df <- df[,!colnames(df) %in% drop.list]
#Convert to factor :
convert.factor <- c("ZIPCODE", "QUALIFIED", "STYLE", "STRUCTURE")
df[,colnames(df) %in% convert.factor] <- as.factor(df[,colnames(df) %in% convert.factor])
#code to remove outliers
df$PRICE <- log(df$PRICE)
outliers <- c("PRICE")
lbound <- c()
ubound <- c()
IQR <- c()
for (i in outliers){
IQR[i] <- quantile(df[,i],.75, na.rm = TRUE) - quantile(df[,i],.25, na.rm = TRUE)
lbound[i] <- as.numeric (quantile(df[,i], .25,na.rm = TRUE) - IQR[i]);
ubound[i] <- as.numeric(quantile(df[,i], .75, na.rm = TRUE) + IQR[i])
df <- df[df[,i] < ubound & df[,i] > lbound,]
}
hist(df$PRICE)
library(dplyr); library(ggplot2); library("rgdal"); library("sp") ; library(tmap); library(leaflet)
df.orig <- df <- read.csv("dc_residential_data/DC_properties.csv")
df$SALEDATE <- as.Date(df$SALEDATE)
df$sale.year <- lubridate::year(df$SALEDATE)
#Filter out homes with no price, no full address, or sold earlier than 2015
df <- df %>% filter(!is.na(PRICE), !is.na(FULLADDRESS),  sale.year > 2015)
#Drop variables in drop list
drop.list <- c("BLDG_NUM", "SALE_NUM", "USECODE", "GIS_LAST_MOD_DTTM", "CMPLX_NUM",
"LIVING_GBA", "GBA", "CITY", "STATE", "NATIONALGRID", "X","Y",
"ASSESSMENT_SUBNBHD", "CENSUS_TRACT", "CENSUS_BLOCK", "SQUARE" , "X.1")
df <- df[,!colnames(df) %in% drop.list]
#Convert to factor :
convert.factor <- c("ZIPCODE", "QUALIFIED", "STYLE", "STRUCTURE")
df[,colnames(df) %in% convert.factor] <- as.factor(df[,colnames(df) %in% convert.factor])
#code to remove outliers
df$PRICE <- log(df$PRICE)
outliers <- c("PRICE", "BEDRM")
lbound <- c()
ubound <- c()
IQR <- c()
for (i in outliers){
IQR[i] <- quantile(df[,i],.75, na.rm = TRUE) - quantile(df[,i],.25, na.rm = TRUE)
lbound[i] <- as.numeric (quantile(df[,i], .25,na.rm = TRUE) - IQR[i]);
ubound[i] <- as.numeric(quantile(df[,i], .75, na.rm = TRUE) + IQR[i])
df <- df[df[,i] < ubound & df[,i] > lbound,]
}
ubound
hist(df$BEDRM)
library(dplyr); library(ggplot2); library("rgdal"); library("sp") ; library(tmap); library(leaflet)
df.orig <- df <- read.csv("dc_residential_data/DC_properties.csv")
df$SALEDATE <- as.Date(df$SALEDATE)
df$sale.year <- lubridate::year(df$SALEDATE)
#Filter out homes with no price, no full address, or sold earlier than 2015
df <- df %>% filter(!is.na(PRICE), !is.na(FULLADDRESS),  sale.year > 2015)
#Drop variables in drop list
drop.list <- c("BLDG_NUM", "SALE_NUM", "USECODE", "GIS_LAST_MOD_DTTM", "CMPLX_NUM",
"LIVING_GBA", "GBA", "CITY", "STATE", "NATIONALGRID", "X","Y",
"ASSESSMENT_SUBNBHD", "CENSUS_TRACT", "CENSUS_BLOCK", "SQUARE" , "X.1")
df <- df[,!colnames(df) %in% drop.list]
#Convert to factor :
convert.factor <- c("ZIPCODE", "QUALIFIED", "STYLE", "STRUCTURE")
df[,colnames(df) %in% convert.factor] <- as.factor(df[,colnames(df) %in% convert.factor])
#code to remove outliers
df$PRICE <- log(df$PRICE)
outliers <- c("PRICE", "BEDRM")
lbound <- c()
ubound <- c()
IQR <- c()
for (i in outliers){
IQR[i] <- quantile(df[,i],.75, na.rm = TRUE) - quantile(df[,i],.25, na.rm = TRUE)
lbound[i] <- as.numeric (quantile(df[,i], .25,na.rm = TRUE) - (1.5 *IQR[i]))
ubound[i] <- as.numeric(quantile(df[,i], .75, na.rm = TRUE) + (1.5 * IQR[i]) )
df <- df[df[,i] < ubound & df[,i] > lbound,]
}
summary(df$PRICE)
ubound
hist(df$BEDRM)
for(i in seq(1:legnth(outliers))){
print( df[df[,outliers[i]],])
}
for(i in seq(1:length(outliers))){
print( df[df[,outliers[i]],])
}
for(i in seq(1:length(outliers))){
df <-  df[df[,outliers[i]] > lbound & df[,outliers[i]]  < ubound        ,]
}
library(dplyr); library(ggplot2); library("rgdal"); library("sp") ; library(tmap); library(leaflet)
df.orig <- df <- read.csv("dc_residential_data/DC_properties.csv")
df$SALEDATE <- as.Date(df$SALEDATE)
df$sale.year <- lubridate::year(df$SALEDATE)
#Filter out homes with no price, no full address, or sold earlier than 2015
df <- df %>% filter(!is.na(PRICE), !is.na(FULLADDRESS),  sale.year > 2015)
#Drop variables in drop list
drop.list <- c("BLDG_NUM", "SALE_NUM", "USECODE", "GIS_LAST_MOD_DTTM", "CMPLX_NUM",
"LIVING_GBA", "GBA", "CITY", "STATE", "NATIONALGRID", "X","Y",
"ASSESSMENT_SUBNBHD", "CENSUS_TRACT", "CENSUS_BLOCK", "SQUARE" , "X.1")
df <- df[,!colnames(df) %in% drop.list]
#Convert to factor :
convert.factor <- c("ZIPCODE", "QUALIFIED", "STYLE", "STRUCTURE")
df[,colnames(df) %in% convert.factor] <- as.factor(df[,colnames(df) %in% convert.factor])
#code to remove outliers
df$PRICE <- log(df$PRICE)
outliers <- c("PRICE", "BEDRM")
lbound <- c()
ubound <- c()
IQR <- c()
for (i in outliers){
IQR[i] <- quantile(df[,i],.75, na.rm = TRUE) - quantile(df[,i],.25, na.rm = TRUE)
lbound[i] <- as.numeric (quantile(df[,i], .25,na.rm = TRUE) - (1.5 *IQR[i]))
ubound[i] <- as.numeric(quantile(df[,i], .75, na.rm = TRUE) + (1.5 * IQR[i]) )
df <- df[df[,i] < ubound & df[,i] > lbound,]
}
for(i in seq(1:length(outliers))){
df <- df[df[,outliers[i]] > lbound & df[,outliers[i]]  < ubound        ,]
}
library(dplyr); library(ggplot2); library("rgdal"); library("sp") ; library(tmap); library(leaflet)
df.orig <- df <- read.csv("dc_residential_data/DC_properties.csv")
df$SALEDATE <- as.Date(df$SALEDATE)
df$sale.year <- lubridate::year(df$SALEDATE)
#Filter out homes with no price, no full address, or sold earlier than 2015
df <- df %>% filter(!is.na(PRICE), !is.na(FULLADDRESS),  sale.year > 2015)
#Drop variables in drop list
drop.list <- c("BLDG_NUM", "SALE_NUM", "USECODE", "GIS_LAST_MOD_DTTM", "CMPLX_NUM",
"LIVING_GBA", "GBA", "CITY", "STATE", "NATIONALGRID", "X","Y",
"ASSESSMENT_SUBNBHD", "CENSUS_TRACT", "CENSUS_BLOCK", "SQUARE" , "X.1")
df <- df[,!colnames(df) %in% drop.list]
#Convert to factor :
convert.factor <- c("ZIPCODE", "QUALIFIED", "STYLE", "STRUCTURE")
df[,colnames(df) %in% convert.factor] <- as.factor(df[,colnames(df) %in% convert.factor])
#code to remove outliers
df$PRICE <- log(df$PRICE)
outliers <- c("PRICE", "BEDRM")
lbound <- c()
ubound <- c()
IQR <- c()
for (i in outliers){
IQR[i] <- quantile(df[,i],.75, na.rm = TRUE) - quantile(df[,i],.25, na.rm = TRUE)
lbound[i] <- as.numeric (quantile(df[,i], .25,na.rm = TRUE) - (1.5 *IQR[i]))
ubound[i] <- as.numeric(quantile(df[,i], .75, na.rm = TRUE) + (1.5 * IQR[i]) )
}
for(i in seq(1:length(outliers))){
df <- df[df[,outliers[i]] > lbound & df[,outliers[i]]  < ubound        ,]
}
2.81^11.6
library(dplyr); library(ggplot2); library("rgdal"); library("sp") ; library(tmap); library(leaflet)
df.orig <- df <- read.csv("dc_residential_data/DC_properties.csv")
df$SALEDATE <- as.Date(df$SALEDATE)
df$sale.year <- lubridate::year(df$SALEDATE)
#Filter out homes with no price, no full address, or sold earlier than 2015
df <- df %>% filter(!is.na(PRICE), !is.na(FULLADDRESS),  sale.year > 2015)
#Drop variables in drop list
drop.list <- c("BLDG_NUM", "SALE_NUM", "USECODE", "GIS_LAST_MOD_DTTM", "CMPLX_NUM",
"LIVING_GBA", "GBA", "CITY", "STATE", "NATIONALGRID", "X","Y",
"ASSESSMENT_SUBNBHD", "CENSUS_TRACT", "CENSUS_BLOCK", "SQUARE" , "X.1")
df <- df[,!colnames(df) %in% drop.list]
#Convert to factor :
convert.factor <- c("ZIPCODE", "QUALIFIED", "STYLE", "STRUCTURE")
df[,colnames(df) %in% convert.factor] <- as.factor(df[,colnames(df) %in% convert.factor])
#code to remove outliers
df$PRICE <- log(df$PRICE)
outliers <- c("PRICE", "BEDRM")
lbound <- c()
ubound <- c()
IQR <- c()
for (i in outliers){
IQR[i] <- quantile(df[,i],.75, na.rm = TRUE) - quantile(df[,i],.25, na.rm = TRUE)
lbound[i] <- as.numeric (quantile(df[,i], .25,na.rm = TRUE) - (1 *IQR[i]))
ubound[i] <- as.numeric(quantile(df[,i], .75, na.rm = TRUE) + (2 * IQR[i]) )
}
for(i in seq(1:length(outliers))){
df <- df[df[,outliers[i]] > lbound & df[,outliers[i]]  < ubound        ,]
}
e^15.2
2.81^15.2
library(dplyr); library(ggplot2); library("rgdal"); library("sp") ; library(tmap); library(leaflet)
df.orig <- df <- read.csv("dc_residential_data/DC_properties.csv")
df$SALEDATE <- as.Date(df$SALEDATE)
df$sale.year <- lubridate::year(df$SALEDATE)
#Filter out homes with no price, no full address, or sold earlier than 2015
df <- df %>% filter(!is.na(PRICE), !is.na(FULLADDRESS),  sale.year > 2015)
#Drop variables in drop list
drop.list <- c("BLDG_NUM", "SALE_NUM", "USECODE", "GIS_LAST_MOD_DTTM", "CMPLX_NUM",
"LIVING_GBA", "GBA", "CITY", "STATE", "NATIONALGRID", "X","Y",
"ASSESSMENT_SUBNBHD", "CENSUS_TRACT", "CENSUS_BLOCK", "SQUARE" , "X.1")
df <- df[,!colnames(df) %in% drop.list]
#Convert to factor :
convert.factor <- c("ZIPCODE", "QUALIFIED", "STYLE", "STRUCTURE")
df[,colnames(df) %in% convert.factor] <- as.factor(df[,colnames(df) %in% convert.factor])
#code to remove outliers
df$PRICE <- log(df$PRICE)
outliers <- c("PRICE", "BEDRM")
lbound <- c()
ubound <- c()
IQR <- c()
for (i in outliers){
IQR[i] <- quantile(df[,i],.75, na.rm = TRUE) - quantile(df[,i],.25, na.rm = TRUE)
lbound[i] <- as.numeric (quantile(df[,i], .25,na.rm = TRUE) - (2 *IQR[i]))
ubound[i] <- as.numeric(quantile(df[,i], .75, na.rm = TRUE) + (2 * IQR[i]) )
}
for(i in seq(1:length(outliers))){
df <- df[df[,outliers[i]] > lbound & df[,outliers[i]]  < ubound        ,]
}
2.81^15.2
summary(df$PRICE)
2.81^11.2
for (i in outliers){
IQR[i] <- quantile(df[,i],.75, na.rm = TRUE) - quantile(df[,i],.25, na.rm = TRUE)
lbound[i] <- as.numeric (quantile(df[,i], .25,na.rm = TRUE) - (2 *IQR[i]))
ubound[i] <- as.numeric(quantile(df[,i], .75, na.rm = TRUE) + (2 * IQR[i]) )
}
for (i in outliers){
IQR[i] <- quantile(df[,i],.75, na.rm = TRUE) - quantile(df[,i],.25, na.rm = TRUE)
lbound[i] <- as.numeric (quantile(df[,i], .25,na.rm = TRUE) - (2 *IQR[i]))
ubound[i] <- as.numeric(quantile(df[,i], .75, na.rm = TRUE) + (2 * IQR[i]) )
}
library(dplyr); library(ggplot2); library("rgdal"); library("sp") ; library(tmap); library(leaflet)
df.orig <- df <- read.csv("dc_residential_data/DC_properties.csv")
df$SALEDATE <- as.Date(df$SALEDATE)
df$sale.year <- lubridate::year(df$SALEDATE)
#Filter out homes with no price, no full address, or sold earlier than 2015
df <- df %>% filter(!is.na(PRICE), !is.na(FULLADDRESS),  sale.year > 2015)
#Drop variables in drop list
drop.list <- c("BLDG_NUM", "SALE_NUM", "USECODE", "GIS_LAST_MOD_DTTM", "CMPLX_NUM",
"LIVING_GBA", "GBA", "CITY", "STATE", "NATIONALGRID", "X","Y",
"ASSESSMENT_SUBNBHD", "CENSUS_TRACT", "CENSUS_BLOCK", "SQUARE" , "X.1")
df <- df[,!colnames(df) %in% drop.list]
#Convert to factor :
convert.factor <- c("ZIPCODE", "QUALIFIED", "STYLE", "STRUCTURE")
df[,colnames(df) %in% convert.factor] <- as.factor(df[,colnames(df) %in% convert.factor])
#code to remove outliers
df$PRICE <- log(df$PRICE)
outliers <- c("PRICE", "BEDRM")
lbound <- c()
ubound <- c()
IQR <- c()
for (i in outliers){
IQR[i] <- quantile(df[,i],.75, na.rm = TRUE) - quantile(df[,i],.25, na.rm = TRUE)
lbound[i] <- as.numeric (quantile(df[,i], .25,na.rm = TRUE) - (2 *IQR[i]))
ubound[i] <- as.numeric(quantile(df[,i], .75, na.rm = TRUE) + (2 * IQR[i]) )
}
2.81^11.2
for (i in outliers){
IQR[i] <- quantile(df[,i],.75, na.rm = TRUE) - quantile(df[,i],.25, na.rm = TRUE)
lbound[i] <- as.numeric (quantile(df[,i], .25,na.rm = TRUE) - (2.5 *IQR[i]))
ubound[i] <- as.numeric(quantile(df[,i], .75, na.rm = TRUE) + (2 * IQR[i]) )
}
2.81^11.2
2.81^10.8
for (i in outliers){
IQR[i] <- quantile(df[,i],.75, na.rm = TRUE) - quantile(df[,i],.25, na.rm = TRUE)
lbound[i] <- as.numeric (quantile(df[,i], .25,na.rm = TRUE) - (2.5 *IQR[i]))
ubound[i] <- as.numeric(quantile(df[,i], .75, na.rm = TRUE) + (2.5 * IQR[i]) )
}
hist(df$PRICE)
for(i in seq(1:length(outliers))){
df <- df[df[,outliers[i]] > lbound & df[,outliers[i]]  < ubound        ,]
}
2.81^10.8
summary(df$PRICE)
library(dplyr); library(ggplot2); library("rgdal"); library("sp") ; library(tmap); library(leaflet)
df.orig <- df <- read.csv("dc_residential_data/DC_properties.csv")
df$SALEDATE <- as.Date(df$SALEDATE)
df$sale.year <- lubridate::year(df$SALEDATE)
#Filter out homes with no price, no full address, or sold earlier than 2015
df <- df %>% filter(!is.na(PRICE), !is.na(FULLADDRESS),  sale.year > 2015)
#Drop variables in drop list
drop.list <- c("BLDG_NUM", "SALE_NUM", "USECODE", "GIS_LAST_MOD_DTTM", "CMPLX_NUM",
"LIVING_GBA", "GBA", "CITY", "STATE", "NATIONALGRID", "X","Y",
"ASSESSMENT_SUBNBHD", "CENSUS_TRACT", "CENSUS_BLOCK", "SQUARE" , "X.1")
df <- df[,!colnames(df) %in% drop.list]
#Convert to factor :
convert.factor <- c("ZIPCODE", "QUALIFIED", "STYLE", "STRUCTURE")
df[,colnames(df) %in% convert.factor] <- as.factor(df[,colnames(df) %in% convert.factor])
#code to remove outliers
df$PRICE <- log(df$PRICE)
outliers <- c("PRICE")
lbound <- c()
ubound <- c()
IQR <- c()
for (i in outliers){
IQR[i] <- quantile(df[,i],.75, na.rm = TRUE) - quantile(df[,i],.25, na.rm = TRUE)
lbound[i] <- as.numeric (quantile(df[,i], .25,na.rm = TRUE) - (2.5 *IQR[i]))
ubound[i] <- as.numeric(quantile(df[,i], .75, na.rm = TRUE) + (2.5 * IQR[i]) )
}
for(i in seq(1:length(outliers))){
df <- df[df[,outliers[i]] > lbound & df[,outliers[i]]  < ubound        ,]
}
2.81^10.8
summary(df$PRICE)
hist(df$BEDRM)
summary(df$BEDRM)
library(dplyr); library(ggplot2); library("rgdal"); library("sp") ; library(tmap); library(leaflet)
df.orig <- df <- read.csv("dc_residential_data/DC_properties.csv")
df$SALEDATE <- as.Date(df$SALEDATE)
df$sale.year <- lubridate::year(df$SALEDATE)
#Filter out homes with no price, no full address, or sold earlier than 2015
df <- df %>% filter(!is.na(PRICE), !is.na(FULLADDRESS),  sale.year > 2015)
#Drop variables in drop list
drop.list <- c("BLDG_NUM", "SALE_NUM", "USECODE", "GIS_LAST_MOD_DTTM", "CMPLX_NUM",
"LIVING_GBA", "GBA", "CITY", "STATE", "NATIONALGRID", "X","Y",
"ASSESSMENT_SUBNBHD", "CENSUS_TRACT", "CENSUS_BLOCK", "SQUARE" , "X.1")
df <- df[,!colnames(df) %in% drop.list]
#Convert to factor :
convert.factor <- c("ZIPCODE", "QUALIFIED", "STYLE", "STRUCTURE")
df[,colnames(df) %in% convert.factor] <- as.factor(df[,colnames(df) %in% convert.factor])
#code to remove outliers
# df$PRICE <- log(df$PRICE)
# outliers <- c("PRICE")
# lbound <- c()
# ubound <- c()
# IQR <- c()
# for (i in outliers){
#   IQR[i] <- quantile(df[,i],.75, na.rm = TRUE) - quantile(df[,i],.25, na.rm = TRUE)
#   lbound[i] <- as.numeric (quantile(df[,i], .25,na.rm = TRUE) - (2.5 *IQR[i]))
#   ubound[i] <- as.numeric(quantile(df[,i], .75, na.rm = TRUE) + (2.5 * IQR[i]) )
#
# }
# for(i in seq(1:length(outliers))){
#  df <- df[df[,outliers[i]] > lbound & df[,outliers[i]]  < ubound        ,]
# }
summary(df$PRICE)
summary(df$BEDRM)
df[df$BEDRM == 20]
df[df$BEDRM == 20,]
summary(df$PRICE)
df[df$PRICE > 25000000,]
summary(NUM_UNITS)
summary(df$NUM_UNITS)
library(dplyr); library(ggplot2); library("rgdal"); library("sp") ; library(tmap); library(leaflet)
df.orig <- df <- read.csv("dc_residential_data/DC_properties.csv")
df$SALEDATE <- as.Date(df$SALEDATE)
df$sale.year <- lubridate::year(df$SALEDATE)
#Filter out homes with no price, no full address, or sold earlier than 2015
df <- df %>% filter(!is.na(PRICE), !is.na(FULLADDRESS),  sale.year > 2015)
#Drop variables in drop list
drop.list <- c("BLDG_NUM", "SALE_NUM", "USECODE", "GIS_LAST_MOD_DTTM", "CMPLX_NUM",
"LIVING_GBA", "GBA", "CITY", "STATE", "NATIONALGRID", "X","Y",
"ASSESSMENT_SUBNBHD", "CENSUS_TRACT", "CENSUS_BLOCK", "SQUARE" , "X.1")
df <- df[,!colnames(df) %in% drop.list]
#Convert to factor :
convert.factor <- c("ZIPCODE", "QUALIFIED", "STYLE", "STRUCTURE")
df[,colnames(df) %in% convert.factor] <- as.factor(df[,colnames(df) %in% convert.factor])
#code to remove outliers
# df$PRICE <- log(df$PRICE)
# outliers <- c("PRICE")
# lbound <- c()
# ubound <- c()
# IQR <- c()
# for (i in outliers){
#   IQR[i] <- quantile(df[,i],.75, na.rm = TRUE) - quantile(df[,i],.25, na.rm = TRUE)
#   lbound[i] <- as.numeric (quantile(df[,i], .25,na.rm = TRUE) - (2.5 *IQR[i]))
#   ubound[i] <- as.numeric(quantile(df[,i], .75, na.rm = TRUE) + (2.5 * IQR[i]) )
#
# }
# for(i in seq(1:length(outliers))){
#  df <- df[df[,outliers[i]] > lbound & df[,outliers[i]]  < ubound        ,]
# }
summary(df$PRICE)
summary(df$BEDRM)
df[df$PRICE > 25000000,]
#Identify the dwelling characteristics we are interested in
continuous.characteristics <- c("BATHRM", "HF_BATHRM", "ROOMS", "BEDRM", "AYB", "YR_RMDL",
"STORIES", "PRICE")
categorical.characteristics <- c("CNDTN", "SOURCE", "AC", "")
unique(df$GRADE)
unique(df$CNDTN)
summary(df$NUM_UNITS)
map <- readOGR("Neighborhood_Clusters")
df$content <- paste(df$FULLADDRESS, sep = "<br/>", df$PRICE)
m <- leaflet() %>%
addProviderTiles(providers$Esri.NatGeoWorldMap) %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=df$LONGITUDE[1:1000], lat=df$LATITUDE[1:1000], popup=df$content[1:1000],
options = popupOptions(closeButton = FALSE))
m
write.csv(df, "dc_residential_data_clean.csv")
boxplot(df$PRICE~df$QUADRANT)
