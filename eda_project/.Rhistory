df <- df[df$HF_BATHRM < 5,]; summary(df$PRICE)
df <- df[df$BATHRM < 6,]; summary(df$PRICE)
df <- df[df$log.PRICE < 15.75,]; summary(df$PRICE)
df <- df[df$log.PRICE > 11,]; summary(df$PRICE)
#Remove observations with more than 3 kitchens and 8 stories
df<- df[order(df$KITCHENS),]; tail(na.omit(df$KITCHENS), 10)
df <- df[!df$KITCHENS %in% tail(na.omit(df$KITCHENS), 10),]; summary(df$PRICE)
df<- df[order(df$STORIES),]
df <- df[!df$STORIES %in% tail(na.omit(df$STORIES), 5),]; summary(df$PRICE)
#Some variables logically need to be greater than 0
pos.variables <- c('AYB', 'YR_RMDL','EYB', 'STORIES', 'LANDAREA', 'BEDRM', 'ROOMS')
for (i in pos.variables) {
df <- df[df[,i] > 0 | is.na(df[,i]) , ]
}
summary(df$log.PRICE)
summary(df$PRICE)
write.csv(df, "data/dc_residential_data_clean.csv")
#Title: exploration.R
#Author: Chris Montgomery
#Last Revised: 2/24/2019
#working_directory: ~DATS6101_DataScience/eda_project
#Input: data/dc_residential_data/DC_properties.csv
#Output: data/dc_residential_data_clean.csv
#Description: The file processes DC residential house source data. It drops unecessary variables,
#removes observations prior to 2015, converts categorical variables to factor. Cleaned data is output
#to the above output file.
#Import necessary libraries
library(dplyr); library(ggplot2); library("rgdal"); library("sp") ; library(tmap); library(leaflet)
df.orig <- df <- read.csv("data/dc_residential_data/DC_properties.csv")
df$SALEDATE <- as.Date(df$SALEDATE)
df$sale.year <-  (lubridate::year(df$SALEDATE))
df$log.PRICE <- log(df$PRICE)
df$LANDAREA <- log(df$LANDAREA)
#Filter out homes with no price, no full address, or sold earlier than 2015
df <- df %>% filter(!is.na(PRICE),  sale.year > 2015, !is.na(QUADRANT), QUADRANT != '')
#Drop variables in drop list
drop.list <- c("BLDG_NUM", "SALE_NUM", "USECODE", "GIS_LAST_MOD_DTTM", "CMPLX_NUM",
"GBA", "CITY", "STATE", "NATIONALGRID", "X","Y",
"ASSESSMENT_SUBNBHD", "CENSUS_TRACT", "CENSUS_BLOCK", "SQUARE" , "X.1")
df <- df[,!colnames(df) %in% drop.list]
summary(df$LIVING_GBA)
df$LIVING_GBA <- df$LIVING_GBA
df$LIVING_GBA <- log (df$LIVING_GBA)
boxplot(df$LIVING_GBA)
summary(df$PRICE)
boxplot(df$LIVING_GBA~df$QUADRANT)
#Title: exploration.R
#Author: Chris Montgomery
#Last Revised: 2/24/2019
#working_directory: ~DATS6101_DataScience/eda_project
#Input: data/dc_residential_data/DC_properties.csv
#Output: data/dc_residential_data_clean.csv
#Description: The file processes DC residential house source data. It drops unecessary variables,
#removes observations prior to 2015, converts categorical variables to factor. Cleaned data is output
#to the above output file.
#Import necessary libraries
library(dplyr); library(ggplot2); library("rgdal"); library("sp") ; library(tmap); library(leaflet)
df.orig <- df <- read.csv("data/dc_residential_data/DC_properties.csv")
df$SALEDATE <- as.Date(df$SALEDATE)
df$sale.year <-  (lubridate::year(df$SALEDATE))
df$log.PRICE <- log(df$PRICE)
df$LANDAREA <- log(df$LANDAREA)
df$LIVING_GBA <- log (df$LIVING_GBA)
#Filter out homes with no price, no full address, or sold earlier than 2015
df <- df %>% filter(!is.na(PRICE),  sale.year > 2015, !is.na(QUADRANT), QUADRANT != '')
#Drop variables in drop list
drop.list <- c("BLDG_NUM", "SALE_NUM", "USECODE", "GIS_LAST_MOD_DTTM", "CMPLX_NUM",
"GBA", "CITY", "STATE", "NATIONALGRID", "X","Y",
"ASSESSMENT_SUBNBHD", "CENSUS_TRACT", "CENSUS_BLOCK", "SQUARE" , "X.1")
df <- df[,!colnames(df) %in% drop.list]
#Convert to factor :
convert.factor <- c("ZIPCODE", "QUALIFIED", "STYLE", "STRUCTURE", "ZIPCODE", "sale.year")
for (i in convert.factor){
df[,i] <- as.factor(df[,i])
}
cap.coordinates <- c(38.8899, -77.0091)
df$dist <-( (df$LONGITUDE - cap.coordinates[2])^2 + (df$LATITUDE - cap.coordinates[1])^2)^.5;
df$sale.year <- as.factor(df$sale.year)
#Manually code cut offs for outliers
cont.variables <- c('BATHRM', 'HF_BATHRM', 'ROOMS', 'BEDRM', 'AYB', 'YR_RMDL','EYB', 'STORIES', 'KITCHENS', 'FIREPLACES', 'LIVING_GBA')
summary(df$PRICE)
#df <- df[df$LANDAREA < 9,]; summary(df$PRICE)
#df <- df[df$LANDAREA > 5,]; summary(df$PRICE)
df <- df[df$FIREPLACES < 6,]; summary(df$PRICE)
df <- df[df$BEDRM < 15, ]; summary(df$PRICE)
df <- df[df$ROOMS < 20, ]; summary(df$PRICE)
df <- df[df$HF_BATHRM < 5,]; summary(df$PRICE)
df <- df[df$BATHRM < 6,]; summary(df$PRICE)
df <- df[df$log.PRICE < 15.75,]; summary(df$PRICE)
df <- df[df$log.PRICE > 11,]; summary(df$PRICE)
#Remove observations with more than 3 kitchens and 8 stories
df<- df[order(df$KITCHENS),]; tail(na.omit(df$KITCHENS), 10)
df <- df[!df$KITCHENS %in% tail(na.omit(df$KITCHENS), 10),]; summary(df$PRICE)
df<- df[order(df$STORIES),]
df <- df[!df$STORIES %in% tail(na.omit(df$STORIES), 5),]; summary(df$PRICE)
#Some variables logically need to be greater than 0
pos.variables <- c('AYB', 'YR_RMDL','EYB', 'STORIES', 'LANDAREA', 'BEDRM', 'ROOMS')
for (i in pos.variables) {
df <- df[df[,i] > 0 | is.na(df[,i]) , ]
}
summary(df$log.PRICE)
summary(df$PRICE)
write.csv(df, "data/dc_residential_data_clean.csv")
#Title: anova_analysis.R
#author: Chris Montgomery
#Input: 'dc_residential_data_clean.csv'
#Output:
#Description: This script conducts ANOVA and chi-square analyses for household characteristics of
#interest grouped by quadrant
library(tidyverse); library(broom)
df <- read.csv('data/dc_residential_data_clean.csv')
df$sale.year <- as.factor(df$sale.year)
#Identify continuous variables of interest for anova tests
cont.variables <- c('BATHRM', 'HF_BATHRM', 'ROOMS', 'BEDRM', 'AYB',
'STORIES', 'PRICE', 'KITCHENS', 'FIREPLACES', 'LIVING_GBA', 'log.PRICE')
#Identify categorical variables of interest for chi-square tests
cat.variables <- c('HEAT', 'AC', 'GRADE', 'SOURCE', 'sale.year')
#Create an apply function that loops through each categorical variable and runs an ANOVA
chi.test.results <-  lapply(seq(1:length(cat.variables)),function(i){
x <- df[,cat.variables[i]]
y <- df[,"QUADRANT"]
chisq.test(x,y)
})
#This loop runs ANOVA tests for each of our continuous variables
anova.test.results  <-  lapply(seq(1:length(cont.variables)),function(i){
tidy ( (aov (df[,cont.variables[i]] ~ df[,'QUADRANT'])))
})
#This loop creates a data frame that houses the results of the anova tests
p.value <- c()
variable <- c()
for (i in 1:length(anova.test.results)){
variable [i] <- cont.variables[i]
p.value[i] <- as.numeric( anova.test.results[[i]]$p.value[1])
}
anova.results <- as.data.frame (cbind(variable,p.value))
#This loop produces box plots for each continuous variable in question
p<- c()
for(i in cont.variables){
print (ggplot(df, aes(x= QUADRANT, y = df[,i] )) + geom_boxplot()+ ylab(i) )
}
2.81^7.5
View(anova.results)
lm1 <- lm(PRICE ~ BATHRM, data = df )
lm1 <- lm(PRICE ~ BATHRM, data = df ); summary(lm)
lm1 <- lm(PRICE ~ BATHRM, data = df ); summary(lm1)
lm1 <- lm(log.PRICE ~ BATHRM, data = df ); summary(lm1)
lm1 <- lm(log.PRICE ~ BATHRM + BEDRM, data = df ); summary(lm1)
summary(LIVING_GBA)
summary(df$LIVING_GBA)
lm1 <- lm(log.PRICE ~ BATHRM + BEDRM + LIVING_GBA , data = df ); summary(lm1)
#Title: exploration.R
#Author: Chris Montgomery
#Last Revised: 2/24/2019
#working_directory: ~DATS6101_DataScience/eda_project
#Input: data/dc_residential_data/DC_properties.csv
#Output: data/dc_residential_data_clean.csv
#Description: The file processes DC residential house source data. It drops unecessary variables,
#removes observations prior to 2015, converts categorical variables to factor. Cleaned data is output
#to the above output file.
#Import necessary libraries
library(dplyr); library(ggplot2); library("rgdal"); library("sp") ; library(tmap); library(leaflet)
df.orig <- df <- read.csv("data/dc_residential_data/DC_properties.csv")
df$SALEDATE <- as.Date(df$SALEDATE)
df$sale.year <-  (lubridate::year(df$SALEDATE))
df$log.PRICE <- log(df$PRICE)
df$LANDAREA <- log(df$LANDAREA)
df$LIVING_GBA <- log (df$LIVING_GBA)
#Filter out homes with no price, no full address, or sold earlier than 2015
df <- df %>% filter(!is.na(PRICE),  sale.year > 2015, !is.na(QUADRANT), QUADRANT != '')
#Drop variables in drop list
drop.list <- c("BLDG_NUM", "SALE_NUM", "USECODE", "GIS_LAST_MOD_DTTM", "CMPLX_NUM",
"GBA", "CITY", "STATE", "NATIONALGRID", "X","Y",
"ASSESSMENT_SUBNBHD", "CENSUS_TRACT", "CENSUS_BLOCK", "SQUARE" , "X.1")
df <- df[,!colnames(df) %in% drop.list]
#Convert to factor :
convert.factor <- c("ZIPCODE", "QUALIFIED", "STYLE", "STRUCTURE", "ZIPCODE", "sale.year")
for (i in convert.factor){
df[,i] <- as.factor(df[,i])
}
cap.coordinates <- c(38.8899, -77.0091)
df$dist <-( (df$LONGITUDE - cap.coordinates[2])^2 + (df$LATITUDE - cap.coordinates[1])^2)^.5;
df$sale.year <- as.factor(df$sale.year)
#Manually code cut offs for outliers
cont.variables <- c('BATHRM', 'HF_BATHRM', 'ROOMS', 'BEDRM', 'AYB', 'YR_RMDL','EYB', 'STORIES', 'KITCHENS', 'FIREPLACES', 'LIVING_GBA')
summary(df$PRICE)
#df <- df[df$LANDAREA < 9,]; summary(df$PRICE)
#df <- df[df$LANDAREA > 5,]; summary(df$PRICE)
df <- df[df$FIREPLACES < 6,]; summary(df$PRICE)
df <- df[df$BEDRM < 15, ]; summary(df$PRICE)
df <- df[df$ROOMS < 20, ]; summary(df$PRICE)
df <- df[df$HF_BATHRM < 5,]; summary(df$PRICE)
df <- df[df$BATHRM < 6,]; summary(df$PRICE)
df <- df[df$log.PRICE < 15.75,]; summary(df$PRICE)
df <- df[df$log.PRICE > 11,]; summary(df$PRICE)
#Remove observations with more than 3 kitchens and 8 stories
df<- df[order(df$KITCHENS),]; tail(na.omit(df$KITCHENS), 10)
df <- df[!df$KITCHENS %in% tail(na.omit(df$KITCHENS), 10),]; summary(df$PRICE)
df<- df[order(df$STORIES),]
df <- df[!df$STORIES %in% tail(na.omit(df$STORIES), 5),]; summary(df$PRICE)
#Some variables logically need to be greater than 0
pos.variables <- c('AYB', 'YR_RMDL','EYB', 'STORIES', 'LANDAREA', 'BEDRM', 'ROOMS')
for (i in pos.variables) {
df <- df[df[,i] > 0 | is.na(df[,i]) , ]
}
summary(df$log.PRICE)
summary(df$PRICE)
df$ZIPCODE <- as.factor(df$ZIPCODE)
write.csv(df, "data/dc_residential_data_clean.csv")
#Title: anova_analysis.R
#author: Chris Montgomery
#Input: 'dc_residential_data_clean.csv'
#Output:
#Description: This script conducts ANOVA and chi-square analyses for household characteristics of
#interest grouped by quadrant
library(tidyverse); library(broom)
df <- read.csv('data/dc_residential_data_clean.csv')
df$sale.year <- as.factor(df$sale.year)
#Identify continuous variables of interest for anova tests
cont.variables <- c('BATHRM', 'HF_BATHRM', 'ROOMS', 'BEDRM', 'AYB',
'STORIES', 'PRICE', 'KITCHENS', 'FIREPLACES', 'LIVING_GBA', 'log.PRICE')
#Identify categorical variables of interest for chi-square tests
cat.variables <- c('HEAT', 'AC', 'GRADE', 'SOURCE', 'sale.year')
#Create an apply function that loops through each categorical variable and runs an ANOVA
chi.test.results <-  lapply(seq(1:length(cat.variables)),function(i){
x <- df[,cat.variables[i]]
y <- df[,"QUADRANT"]
chisq.test(x,y)
})
#This loop runs ANOVA tests for each of our continuous variables
anova.test.results  <-  lapply(seq(1:length(cont.variables)),function(i){
tidy ( (aov (df[,cont.variables[i]] ~ df[,'QUADRANT'])))
})
#This loop creates a data frame that houses the results of the anova tests
p.value <- c()
variable <- c()
for (i in 1:length(anova.test.results)){
variable [i] <- cont.variables[i]
p.value[i] <- as.numeric( anova.test.results[[i]]$p.value[1])
}
anova.results <- as.data.frame (cbind(variable,p.value))
#This loop produces box plots for each continuous variable in question
p<- c()
for(i in cont.variables){
print (ggplot(df, aes(x= QUADRANT, y = df[,i] )) + geom_boxplot()+ ylab(i) )
}
lm1 <- lm(log.PRICE ~ BATHRM + BEDRM + LIVING_GBA + ZIPCODE  , data = df ); summary(lm1)
df$ZIPCODE <- as.factor(df$ZIPCODE)
lm1 <- lm(log.PRICE ~ BATHRM + BEDRM + LIVING_GBA + ZIPCODE  , data = df ); summary(lm1)
lm1 <- lm(log.PRICE ~ BATHRM + BEDRM + LIVING_GBA + ZIPCODE + dist  , data = df ); summary(lm1)
cor(BATHRM, BEDRM, data = df)
cor(df$BATHRM, df$BEDRM)
cor(df$BATHRM, df$HF_BATHRM)
lm1 <- lm(log.PRICE ~ BATHRM + BEDRM + HF_BATHRM + LIVING_GBA + ZIPCODE + dist  , data = df ); summary(lm1)
lm1 <- lm(log.PRICE ~ BATHRM + BEDRM + ROOMS + HF_BATHRM + LIVING_GBA + ZIPCODE + dist  , data = df ); summary(lm1)
cor(df$BATHRM, df$HF_BATHRM)
library(tidyverse); library(broom); library(corrplot)
df <- read.csv('data/dc_residential_data_clean.csv')
df$ZIPCODE <- as.factor (df$ZIPCODE)
df$sale.year <- as.factor(df$sale.year)
df$ZIPCODE <- as.factor (df$ZIPCODE)
res <- cor(df)
numeric.df <- df[,c(2,3,'NUM_UNITS':'STORIES')]
numeric.df <- df[,c('NUM_UNITS':'STORIES')]
numeric.df <- df[,'NUM_UNITS']
df$X <- NULL
numeric.df <- df[,c('HEAT', 'AC', 'SALEDATE', 'QUALIFIED', 'STYLE',
'STRUCT', 'GRADE', 'CNDTN', 'EXTWALL', 'ROOF', 'INTWALL','SOURCE', 'FULLADDRESS', 'ZIPCODE','ASSESSMENT_NBHD','WARD','QUADRANT','sale.year')]
numeric.df <- df[,!c('HEAT', 'AC', 'SALEDATE', 'QUALIFIED', 'STYLE',
'STRUCT', 'GRADE', 'CNDTN', 'EXTWALL', 'ROOF', 'INTWALL','SOURCE', 'FULLADDRESS', 'ZIPCODE','ASSESSMENT_NBHD','WARD','QUADRANT','sale.year')]
numeric.df <- df[!,c('HEAT', 'AC', 'SALEDATE', 'QUALIFIED', 'STYLE',
'STRUCT', 'GRADE', 'CNDTN', 'EXTWALL', 'ROOF', 'INTWALL','SOURCE', 'FULLADDRESS', 'ZIPCODE','ASSESSMENT_NBHD','WARD','QUADRANT','sale.year')]
numeric.df <- df[,-c('HEAT', 'AC', 'SALEDATE', 'QUALIFIED', 'STYLE',
'STRUCT', 'GRADE', 'CNDTN', 'EXTWALL', 'ROOF', 'INTWALL','SOURCE', 'FULLADDRESS', 'ZIPCODE','ASSESSMENT_NBHD','WARD','QUADRANT','sale.year')]
numeric.df <- df[-,c('HEAT', 'AC', 'SALEDATE', 'QUALIFIED', 'STYLE',
'STRUCT', 'GRADE', 'CNDTN', 'EXTWALL', 'ROOF', 'INTWALL','SOURCE', 'FULLADDRESS', 'ZIPCODE','ASSESSMENT_NBHD','WARD','QUADRANT','sale.year')]
numeric.df <- df[,-c('HEAT', 'AC', 'SALEDATE', 'QUALIFIED', 'STYLE',
'STRUCT', 'GRADE', 'CNDTN', 'EXTWALL', 'ROOF', 'INTWALL','SOURCE', 'FULLADDRESS', 'ZIPCODE','ASSESSMENT_NBHD','WARD','QUADRANT','sale.year')]
numeric.df <- df[!df[,c('HEAT', 'AC', 'SALEDATE', 'QUALIFIED', 'STYLE',
'STRUCT', 'GRADE', 'CNDTN', 'EXTWALL', 'ROOF', 'INTWALL',
'SOURCE', 'FULLADDRESS', 'ZIPCODE','ASSESSMENT_NBHD','WARD',
'QUADRANT','sale.year')],]
cont.variables <- c('HF_BATHRM', 'BATHRM', 'NUM_UNITS', 'ROOMS','BEDRM', 'AYB', 'YR_RMDL',
'EYB', 'STORIES', 'PRICE', 'KITCHENS', 'FIREPLACES', 'LANDAREA', 'LIVING_GBA',
'dist')
res <- cor(df[,cont.variables])
res <- cor(df[,cont.variables])
corrplot(res, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
res
?res
?cor
res <- cor(df[,cont.variables], na.rm = TRUE)
res <- cor(df[,cont.variables], complete.obs = TRUE)
res <- cor(df[,cont.variables], use = na.or.complete)
res <- cor(df[,cont.variables], use = "na.or.complete")
corrplot(res, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
res
cont.variables <- c('HF_BATHRM', 'BATHRM', 'NUM_UNITS', 'ROOMS','BEDRM', 'AYB',
'STORIES', 'PRICE', 'KITCHENS', 'FIREPLACES', 'LANDAREA', 'LIVING_GBA',
'dist')
res <- cor(df[,cont.variables], use = 'complete.obs' )
cont.variables <- c('HF_BATHRM', 'BATHRM', 'NUM_UNITS', 'ROOMS','BEDRM', 'AYB',
'PRICE', 'KITCHENS', 'FIREPLACES', 'LANDAREA', 'LIVING_GBA',
'dist')
res <- cor(df[,cont.variables], use = 'complete.obs' )
cont.variables <- c('HF_BATHRM', 'BATHRM', 'ROOMS','BEDRM', 'AYB',
'PRICE', 'KITCHENS', 'FIREPLACES', 'LANDAREA', 'LIVING_GBA',
'dist')
res <- cor(df[,cont.variables], use = 'complete.obs' )
cont.variables <- c('HF_BATHRM', 'BATHRM', 'ROOMS','BEDRM', 'AYB',
'PRICE', 'KITCHENS', 'FIREPLACES', 'LIVING_GBA',
'dist')
res <- cor(df[,cont.variables], use = 'complete.obs' )
cont.variables <- c('HF_BATHRM', 'BATHRM', 'ROOMS','BEDRM', 'AYB',
'PRICE', 'FIREPLACES', 'LIVING_GBA',
'dist')
res <- cor(df[,cont.variables], use = 'complete.obs' )
corrplot(res, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
lm1 <- lm(PRICE ~ LIVING_GBA ,data = df)
lm1 <- lm(PRICE ~ LIVING_GBA ,data = df); summary(lm1)
lm1 <- lm(PRICE ~ BEDRM ,data = df); summary(lm1)
lm1 <- lm(log.PRICE ~ BEDRM ,data = df); summary(lm1)
lm1 <- lm(log.PRICE ~ BEDRM + dist ,data = df); summary(lm1)
lm1 <- lm(log.PRICE ~ BEDRM + dist + AYB ,data = df); summary(lm1)
lm1 <- lm(log.PRICE ~ BEDRM + dist + AYB  + ZIPCODE,data = df); summary(lm1)
lm1 <- lm(log.PRICE ~ BEDRM + dist + AYB  + ZIPCODE +
AC,data = df); summary(lm1)
summary(df$AC)
#Remove remaining quirks from data
df$AC <- df[df$AC != '0',]
lm1 <- lm(log.PRICE ~ BEDRM + dist + AYB  + ZIPCODE +
AC,data = df); summary(lm1)
#Remove remaining quirks from data
df$AC <- df[!df$AC == '0',]
unique(df$AC)
#Remove remaining quirks from data
df$AC <- df[!df$AC == 0,]
#Remove remaining quirks from data
df$AC <- df[na.omit(df$AC),]
unique(df$AC)
#Title: regression_analyis.R
#Author: Chris Montgomery
#Last Revised: 3/1/2019
#Input: dc_residential_data_clean.csv
#Output:
#Description: This script fits a linear regression model to explain
#Price determinates of DC houses
library(tidyverse); library(broom); library(corrplot)
df <- read.csv('data/dc_residential_data_clean.csv')
df$sale.year <- as.factor(df$sale.year)
df$ZIPCODE <- as.factor (df$ZIPCODE)
df$X <- NULL
#Correlation matrix shows very high degree of multicollinearity among variables
cont.variables <- c('HF_BATHRM', 'BATHRM', 'ROOMS','BEDRM', 'AYB',
'PRICE', 'FIREPLACES', 'LIVING_GBA',
'dist')
res <- cor(df[,cont.variables], use = 'complete.obs' )
corrplot(res, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
#Remove remaining quirks from data
df$AC <- df[na.omit(df$AC),'AC']
#Title: regression_analyis.R
#Author: Chris Montgomery
#Last Revised: 3/1/2019
#Input: dc_residential_data_clean.csv
#Output:
#Description: This script fits a linear regression model to explain
#Price determinates of DC houses
library(tidyverse); library(broom); library(corrplot)
df <- read.csv('data/dc_residential_data_clean.csv')
df$sale.year <- as.factor(df$sale.year)
df$ZIPCODE <- as.factor (df$ZIPCODE)
df$X <- NULL
#Correlation matrix shows very high degree of multicollinearity among variables
cont.variables <- c('HF_BATHRM', 'BATHRM', 'ROOMS','BEDRM', 'AYB',
'PRICE', 'FIREPLACES', 'LIVING_GBA',
'dist')
res <- cor(df[,cont.variables], use = 'complete.obs' )
corrplot(res, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
#Remove remaining quirks from data
df <- df[na.omit(df$AC),]
summary(df$AC)
#Title: regression_analyis.R
#Author: Chris Montgomery
#Last Revised: 3/1/2019
#Input: dc_residential_data_clean.csv
#Output:
#Description: This script fits a linear regression model to explain
#Price determinates of DC houses
library(tidyverse); library(broom); library(corrplot)
df <- read.csv('data/dc_residential_data_clean.csv')
df$sale.year <- as.factor(df$sale.year)
df$ZIPCODE <- as.factor (df$ZIPCODE)
df$X <- NULL
#Correlation matrix shows very high degree of multicollinearity among variables
cont.variables <- c('HF_BATHRM', 'BATHRM', 'ROOMS','BEDRM', 'AYB',
'PRICE', 'FIREPLACES', 'LIVING_GBA',
'dist')
res <- cor(df[,cont.variables], use = 'complete.obs' )
corrplot(res, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
#Remove remaining quirks from data
# Fit a linear model
lm1 <- lm(log.PRICE ~ BEDRM + dist + AYB  + ZIPCODE +
AC,data = df); summary(lm1)
summary(df$AC)
df[df$AC == '0',]
df <- df[!df$AC == '0',]
unique(df$AC)
summary(df$AC)
lm1 <- lm(log.PRICE ~ BEDRM + dist + AYB  + ZIPCODE +
AC,data = df); summary(lm1)
lm1 <- lm(log.PRICE ~ BEDRM + dist + AYB  + ZIPCODE + SOURCE
AC,data = df); summary(lm1)
lm1 <- lm(log.PRICE ~ BEDRM + dist + AYB  + ZIPCODE + SOURCE +
AC,data = df); summary(lm1)
lm1 <- lm(log.PRICE ~ BEDRM + dist + AYB  + ZIPCODE + SOURCE + QUADRANT
AC,data = df); summary(lm1)
lm1 <- lm(log.PRICE ~ BEDRM + dist + AYB  + ZIPCODE + SOURCE + QUADRANT +
AC,data = df); summary(lm1)
lm1 <- lm(log.PRICE ~ BEDRM + dist + AYB   + SOURCE + QUADRANT +
AC,data = df); summary(lm1)
lm1 <- lm(log.PRICE ~ BEDRM + dist + AYB   + SOURCE + QUADRANT +
AC + CNDT,data = df); summary(lm1)
lm1 <- lm(log.PRICE ~ BEDRM + dist + AYB   + SOURCE + QUADRANT +
AC + CNDTN,data = df); summary(lm1)
lm1 <- lm(log.PRICE ~ BEDRM + dist + AYB   + SOURCE + QUADRANT +
AC + GRADE,data = df); summary(lm1)
lm1 <- lm(log.PRICE ~ BEDRM + dist + AYB   + SOURCE + QUADRANT +
AC + CNDTN,data = df); summary(lm1)
unique(df$CNDTN)
df[df$CNDTN == 'Very',]
df[df$CNDTN == 'Very Good',]
unique(df$CNDTN)
levels(df$CNDTN) <- c('Default', 'Poor', 'Average', 'Fair', 'Good', 'Very Good',
'Excellent')
levels(df$CNDTN) <- c('Default', 'Poor', 'Average', 'Fair', 'Good', 'Very Good',
'Excellent')
unique(df$CNDTN)
df[df$CNDTN == '',]
nrow (df[df$CNDTN == '',])
nrow (df[df$CNDTN == 'Default',])
df['','CNDTN']
df[df$CNDTN == '']
df[df$CNDTN == '', 'CNDTN'] = 'Default'
unique(df$CNDTN)
levels(df$CNDTN) <- c('Default', 'Poor', 'Average', 'Fair', 'Good', 'Very Good',
'Excellent')
df[df$CNDTN == '',]
summary(df$CNDTN)
df <- df[na.omit (df$CNDTN),]
levels(df$CNDTN) <- c('Default', 'Poor', 'Average', 'Fair', 'Good', 'Very Good',
'Excellent')
levels(df$CNDTN)
levels(df$CNDTN) <- c( '','Default', 'Poor', 'Average', 'Fair', 'Good', 'Very Good',
'Excellent')
#Remove remaining quirks from data
df <- df[!df$AC == '0',]
df[df$CNDTN == '', 'CNDTN'] = 'Default'
levels(df$CNDTN) <- c( '','Default', 'Poor', 'Average', 'Fair', 'Good', 'Very Good',
'Excellent')
lm1 <- lm(log.PRICE ~ BEDRM + dist + AYB   + SOURCE + QUADRANT +
AC + CNDTN,data = df); summary(lm1)
levels(df$CNDTN)
lm1 <- lm(log.PRICE ~ BEDRM + dist + AYB   + SOURCE + QUADRANT +
AC ,data = df); summary(lm1)
#Title: regression_analyis.R
#Author: Chris Montgomery
#Last Revised: 3/1/2019
#Input: dc_residential_data_clean.csv
#Output:
#Description: This script fits a linear regression model to explain
#Price determinates of DC houses
library(tidyverse); library(broom); library(corrplot)
df <- read.csv('data/dc_residential_data_clean.csv')
df$sale.year <- as.factor(df$sale.year)
df$ZIPCODE <- as.factor (df$ZIPCODE)
df$X <- NULL
#Correlation matrix shows very high degree of multicollinearity among variables
cont.variables <- c('HF_BATHRM', 'BATHRM', 'ROOMS','BEDRM', 'AYB',
'PRICE', 'FIREPLACES', 'LIVING_GBA',
'dist')
res <- cor(df[,cont.variables], use = 'complete.obs' )
corrplot(res, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
#Remove remaining quirks from data
df <- df[!df$AC == '0',]
df[df$CNDTN == '', 'CNDTN'] = 'Default'
levels(df$CNDTN) <- c( '','Default', 'Poor', 'Average', 'Fair', 'Good', 'Very Good',
'Excellent')
levels(df$CNDTN)
# Fit a linear model
lm1 <- lm(log.PRICE ~ BEDRM + dist + AYB   + SOURCE + QUADRANT +
AC ,data = df); summary(lm1)
lm1 <- lm(log.PRICE ~ BEDRM + dist + AYB   + SOURCE + QUADRANT +
AC + CNDTN ,data = df); summary(lm1)
nrow(df[df$CNDTN == 'Very Good'])
nrow(df[df$CNDTN == 'Very Good'],)
nrow(df[df$CNDTN == 'Very Good',])
lm1 <- lm(log.PRICE ~ BEDRM + dist + AYB   + SOURCE + QUADRANT +
AC + CNDTN ,data = df); summary(lm1)
nrow(df[df$CNDTN == 'EXCELLENT',])
nrow(df[df$CNDTN == 'Excellent',])
nrow(df[df$CNDTN == 'Good',])
nrow(df[df$CNDTN == 'Fair',])
nrow(df[df$CNDTN == 'Poor',])
nrow(df[df$CNDTN == 'Average',])
lm1 <- lm(log.PRICE ~ BEDRM + dist + AYB   + SOURCE + QUADRANT +
AC + CNDTN ,data = df); summary(lm1)
