caption = "Source: FERC Exercise" ) +  ylab ( "Sales")+
theme(title = element_text(size = 13, face = "bold"),
plot.subtitle = element_text (size = 10)) +
annotate("text", x = c(16), y = c(4750),
label = df.products[which.max(df.products$avg.sale.value),]$Product,
color="orange", size=4.5 , angle=50, fontface="bold")+
annotate("segment", x = 15.5, xend = 13, y = 4800, yend = 5000,
colour = "orange", size=2, alpha=1, arrow=arrow())
ggplot(df.products, aes(x = Product, y = avg.sale.value)) +
geom_bar(stat = "identity") + theme_bw()+
labs(title = "Average Total Sale Value by Product", subtitle = "From 04-01-2013 - 04-01-2014 (US Dollars)",
caption = "Source: FERC Exercise" ) +  ylab ( "Sales")+
theme(title = element_text(size = 13, face = "bold"),
plot.subtitle = element_text (size = 10)) +
annotate("text", x = c(16), y = c(4750),
label = df.products[which.max(df.products$avg.sale.value),]$Product,
color="orange", size=4.5 , angle=50, fontface="bold")+
annotate("segment", x = 15.5, xend = 13, y = 4800, yend = 5000,
colour = "orange", size=2, alpha=1, arrow=arrow())
ggplot(df.products, aes(x = Product, y = avg.sale.value)) +
geom_bar(stat = "identity") + theme_bw()+
labs(title = "Average Total Sale Value by Product", subtitle = "04-01-2013 to 04-01-2014 (US Dollars)",
caption = "Source: FERC Exercise" ) +  ylab ( "Sales")+
theme(title = element_text(size = 13, face = "bold"),
plot.subtitle = element_text (size = 10)) +
annotate("text", x = c(16), y = c(4750),
label = df.products[which.max(df.products$avg.sale.value),]$Product,
color="orange", size=4.5 , angle=50, fontface="bold")+
annotate("segment", x = 15.5, xend = 13, y = 4800, yend = 5000,
colour = "orange", size=2, alpha=1, arrow=arrow())
ggplot(df.products, aes(x = Product, y = avg.sale.value)) +
geom_bar(stat = "identity") + theme_bw()+
labs(title = "Average Total Sale Value by Product", subtitle = "04/2013 to 04/2014 (US Dollars)",
caption = "Source: FERC Exercise" ) +  ylab ( "Sales")+
theme(title = element_text(size = 13, face = "bold"),
plot.subtitle = element_text (size = 10)) +
annotate("text", x = c(16), y = c(4750),
label = df.products[which.max(df.products$avg.sale.value),]$Product,
color="orange", size=4.5 , angle=50, fontface="bold")+
annotate("segment", x = 15.5, xend = 13, y = 4800, yend = 5000,
colour = "orange", size=2, alpha=1, arrow=arrow())
ggplot(df.products, aes(x = Product, y = avg.sale.value)) +
geom_bar(stat = "identity") + theme_bw()+
labs(title = "Average Total Sale Value by Product", subtitle = "04/2013 - 04/2014 (US Dollars)",
caption = "Source: FERC Exercise" ) +  ylab ( "Sales")+
theme(title = element_text(size = 13, face = "bold"),
plot.subtitle = element_text (size = 10)) +
annotate("text", x = c(16), y = c(4750),
label = df.products[which.max(df.products$avg.sale.value),]$Product,
color="orange", size=4.5 , angle=50, fontface="bold")+
annotate("segment", x = 15.5, xend = 13, y = 4800, yend = 5000,
colour = "orange", size=2, alpha=1, arrow=arrow())
ggplot(df.products, aes(x = Product, y = avg.sale.value)) +
geom_bar(stat = "identity") + theme_bw()+
labs(title = "Average Total Sale Value by Product", subtitle = "04/2013 - 04/2014 (US Dollars)",
caption = "Source: FERC Exercise" ) +  ylab ( "Sales")+
theme(title = element_text(size = 13, face = "bold"),
plot.subtitle = element_text (size = 10)) +
annotate("text", x = c(16), y = c(4750),
label = df.products[which.max(df.products$avg.sale.value),]$Product,
color="orange", size=4.5 , angle=50, fontface="bold")+
annotate("segment", x = 15.5, xend = 13, y = 4800, yend = 5000,
colour = "orange", size=1, alpha=1, arrow=arrow())+
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(df.products, aes(x = Product, y = avg.sale.value)) +
geom_bar(stat = "identity") + theme_bw()+
labs(title = "Average Total Sale Value by Product", subtitle = "04/2013 - 04/2014 (US Dollars)",
caption = "Source: FERC Exercise" ) +  ylab ( "Sales")+
theme(title = element_text(size = 13, face = "bold"),
plot.subtitle = element_text (size = 10)) +
annotate("text", x = c(17), y = c(4750),
label = df.products[which.max(df.products$avg.sale.value),]$Product,
color="orange", size=4.5 , angle=50, fontface="bold")+
annotate("segment", x = 16.5, xend = 13, y = 4800, yend = 5000,
colour = "orange", size=1, alpha=1, arrow=arrow())+
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(df.products, aes(x = Product, y = avg.sale.value)) +
geom_bar(stat = "identity") + theme_bw()+
labs(title = "Average Total Sale Value by Product", subtitle = "04/2013 - 04/2014 (US Dollars)",
caption = "Source: FERC Exercise" ) +  ylab ( "Sales")+
theme(title = element_text(size = 13, face = "bold"),
plot.subtitle = element_text (size = 10)) +
annotate("text", x = c(17), y = c(4650),
label = df.products[which.max(df.products$avg.sale.value),]$Product,
color="orange", size=4.5 , angle=50, fontface="bold")+
annotate("segment", x = 16.5, xend = 13, y = 4800, yend = 5000,
colour = "orange", size=1, alpha=1, arrow=arrow())+
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(df.products, aes(x = Product, y = avg.sale.value)) +
geom_bar(stat = "identity") + theme_bw()+
labs(title = "Average Total Sale Value by Product", subtitle = "04/2013 - 04/2014 (US Dollars)",
caption = "Source: FERC Exercise" ) +  ylab ( "Sales")+
theme(title = element_text(size = 13, face = "bold"),
plot.subtitle = element_text (size = 10)) +
annotate("text", x = c(17), y = c(4550),
label = df.products[which.max(df.products$avg.sale.value),]$Product,
color="orange", size=4 , angle=50, fontface="bold")+
annotate("segment", x = 16.5, xend = 13, y = 4800, yend = 5000,
colour = "orange", size=1, alpha=1, arrow=arrow())+
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(df.products, aes(x = Product, y = avg.sale.value)) +
geom_bar(stat = "identity") + theme_bw()+
labs(title = "Average Total Sale Value by Product", subtitle = "04/2013 - 04/2014 (US Dollars)",
caption = "Source: FERC Exercise" ) +  ylab ( "Sales")+
theme(title = element_text(size = 13, face = "bold"),
plot.subtitle = element_text (size = 10)) +
annotate("text", x = c(18), y = c(4550),
label = df.products[which.max(df.products$avg.sale.value),]$Product,
color="orange", size=4 , angle=50, fontface="bold")+
annotate("segment", x = 16.5, xend = 13, y = 4800, yend = 5000,
colour = "orange", size=1, alpha=1, arrow=arrow())+
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(df.products, aes(x = Product, y = avg.sale.value)) +
geom_bar(stat = "identity") + theme_bw()+
labs(title = "Average Total Sale Value by Product", subtitle = "04/2013 - 04/2014 (US Dollars)",
caption = "Source: FERC Exercise" ) +  ylab ( "Sales")+
theme(title = element_text(size = 13, face = "bold"),
plot.subtitle = element_text (size = 10)) +
annotate("text", x = c(18), y = c(4550),
label = df.products[which.max(df.products$avg.sale.value),]$Product,
color="orange", size=4 , angle=50, fontface="bold")+
annotate("segment", x = 17, xend = 13, y = 4800, yend = 5000,
colour = "orange", size=1, alpha=1, arrow=arrow())+
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(df.products, aes(x = Product, y = avg.sale.value)) +
geom_bar(stat = "identity") + theme_bw()+
labs(title = "Average Sale Value by Product", subtitle = "04/2013 - 04/2014 (US Dollars)",
caption = "Source: FERC Exercise" ) +  ylab ( "Sales")+
theme(title = element_text(size = 13, face = "bold"),
plot.subtitle = element_text (size = 10)) +
annotate("text", x = c(18), y = c(4550),
label = df.products[which.max(df.products$avg.sale.value),]$Product,
color="orange", size=4 , angle=50, fontface="bold")+
annotate("segment", x = 17, xend = 13, y = 4800, yend = 5000,
colour = "orange", size=1, alpha=1, arrow=arrow())+
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
cote <- df[df$Product == "Côte de Blaye",]
View(cote)
length(unique(df$Product))
df.products[df.products$Product == "Cote de Blaye",]
df.products[df.products$Product == "Côte de Blaye",]
top_n(df.products, 10, avg.sale.value)
df.products[which.max(df.products$avg.sale.value),]$avg.sale.value / mean(df.products$avg.sale.value)
df.products[which.max(df.products$avg.sale.value),]$avg.sale.value / sd(df.products$avg.sale.value)
df.products[which.max(df.products$avg.sale.value),]$avg.sale.value - mean(df.products$avg.sale.value)/
sd(df.products$avg.sale.value)
(df.products[which.max(df.products$avg.sale.value),]$avg.sale.value - mean(df.products$avg.sale.value))/
sd(df.products$avg.sale.value)
#Title: Data Analysis for FERC Interview
#Author: Christopher Montgomery
#Last Revised: 1//10/2019
#Input: ferc_exercise.xlsx
#Output: ferc_write_up.docx
# Set correct directory to locate data and save script
setwd("Documents/active_projects/FERC_assignment")
#Import libraries required for analysis
library(readxl); library(ggplot2); library(tidyverse)
#Read in data file. Note, second sheet contains data
df <- read_xlsx("ferc_exercise.xlsx", sheet = 2)
#Some quick descriptives
length(unique(df$Customer))
summary(df$Timeline)
# Generate escriptive statistics for products
df.products <- df %>%
group_by(Product) %>%
summarize(total.sales = sum(Amount), avg.sale.value = mean(Amount),
total.transactions = n())
#Number of Unique products in dataset and total transactions
length(df.products$Product)
sum(df.products$total.transactions)
#Plot of total transactions by product.
#Too many X axis values to visually determine which products. But
#good for finding outliers. No significant outliers at first glance.
ggplot(df.products, aes(x = Product, y = total.transactions)) +
geom_bar(stat = "identity") + theme_bw() +
labs(title = "Total Transactions by Product",
caption = "Source: FERC Exercise" ) +  ylab ( "Transactions")+
theme(title = element_text(size = 13, face = "bold"))+
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
hist(df.products$total.transactions)
#Plot for average transaction value. Clearly one huge outlier
#We can investigate further.
ggplot(df.products, aes(x = Product, y = avg.sale.value)) +
geom_bar(stat = "identity") + theme_bw()+
labs(title = "Average Sale Value by Product", subtitle = "04/2013 - 04/2014 (US Dollars)",
caption = "Source: FERC Exercise" ) +  ylab ( "Sales")+
theme(title = element_text(size = 13, face = "bold"),
plot.subtitle = element_text (size = 10)) +
annotate("text", x = c(18), y = c(4550),
label = df.products[which.max(df.products$avg.sale.value),]$Product,
color="orange", size=4 , angle=50, fontface="bold")+
annotate("segment", x = 17, xend = 13, y = 4800, yend = 5000,
colour = "orange", size=1, alpha=1, arrow=arrow())+
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
top_n(df.products, 10, avg.sale.value)
#Determine which product has outlier average sale value.
#Cote de Blaye had max average sale value, with 9 transactions
# 5466$ per sale
df.products[which.max(df.products$avg.sale.value),]$Product
top.products <- top_n(df.products, 10, avg.sale.value)
#Calculate how many standard deviations away Average sale of Cote De Blaye was from
#mean of average product sales
(df.products[which.max(df.products$avg.sale.value),]$avg.sale.value - mean(df.products$avg.sale.value))/
sd(df.products$avg.sale.value)
#Return to original dataset to see who is buying Cote de Blaye
cote <- df[df$Product == "Côte de Blaye",]
cote
#Visual Inspection of Cote de Blaye purchases suggest high variance in
#sale prices. Standard deviation is 2901, more than half the mean value
sd(cote$Amount)
sd(cote$Amount)/ mean(cote$Amount)
#Let's take a brief look at Simob's purcases compared to the entire set
SIMOB <- df[df$Customer == "SIMOB",]
SIMOB
sum(SIMOB$Amount); mean(SIMOB$Amount)
#Create a dataframe of transactions grouped by customers
df.customers <- df %>%
group_by(Customer) %>%
summarize(total.purchases = sum(Amount), avg.purchase.value = mean(Amount),
total.transactions = n())
#Show the top 10 customers by average transaction value.
top.customers <- top_n(df.customers, 10, avg.purchase.value)
#Brief descriptives on customer purchases
mean(df.customers$total.purchases); sd(df.customers$total.purchases)
hist(df.customers$total.purchases, main= "Histogram of Customer's Total Expenditure",
xlab = "Total Expenditure")
length(unique(df$Product))
#Title: Data Analysis for FERC Interview
#Author: Christopher Montgomery
#Last Revised: 1//10/2019
#Input: ferc_exercise.xlsx
#Output: ferc_write_up.docx
# Set correct directory to locate data and save script.
#This line is directory specific
#setwd("Documents/active_projects/FERC_assignment")
#Import libraries required for analysis
library(readxl); library(ggplot2); library(tidyverse)
#Read in data file. Note, second sheet contains data
df <- read_xlsx("ferc_exercise.xlsx", sheet = 2)
#Some quick descriptives
length(unique(df$Customer))
summary(df$Timeline)
# Generate escriptive statistics for products
df.products <- df %>%
group_by(Product) %>%
summarize(total.sales = sum(Amount), avg.sale.value = mean(Amount),
total.transactions = n())
#Number of Unique products in dataset and total transactions
length(df.products$Product)
sum(df.products$total.transactions)
#Plot of total transactions by product.
#Too many X axis values to visually determine which products. But
#good for finding outliers. No significant outliers at first glance.
ggplot(df.products, aes(x = Product, y = total.transactions)) +
geom_bar(stat = "identity") + theme_bw() +
labs(title = "Total Transactions by Product",
caption = "Source: FERC Exercise" ) +  ylab ( "Transactions")+
theme(title = element_text(size = 13, face = "bold"))+
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
hist(df.products$total.transactions)
#Plot for average transaction value. Clearly one huge outlier
#We can investigate further.
ggplot(df.products, aes(x = Product, y = avg.sale.value)) +
geom_bar(stat = "identity") + theme_bw()+
labs(title = "Average Sale Value by Product", subtitle = "04/2013 - 04/2014 (US Dollars)",
caption = "Source: FERC Exercise" ) +  ylab ( "Sales")+
theme(title = element_text(size = 13, face = "bold"),
plot.subtitle = element_text (size = 10)) +
annotate("text", x = c(18), y = c(4550),
label = df.products[which.max(df.products$avg.sale.value),]$Product,
color="orange", size=4 , angle=50, fontface="bold")+
annotate("segment", x = 17, xend = 13, y = 4800, yend = 5000,
colour = "orange", size=1, alpha=1, arrow=arrow())+
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
top_n(df.products, 10, avg.sale.value)
#Determine which product has outlier average sale value.
#Cote de Blaye had max average sale value, with 9 transactions
# 5466$ per sale
df.products[which.max(df.products$avg.sale.value),]$Product
top.products <- top_n(df.products, 10, avg.sale.value)
#Calculate how many standard deviations away Average sale of Cote De Blaye was from
#mean of average product sales
(df.products[which.max(df.products$avg.sale.value),]$avg.sale.value - mean(df.products$avg.sale.value))/
sd(df.products$avg.sale.value)
#Return to original dataset to see who is buying Cote de Blaye
cote <- df[df$Product == "Côte de Blaye",]
cote
#Visual Inspection of Cote de Blaye purchases suggest high variance in
#sale prices. Standard deviation is 2901, more than half the mean value
sd(cote$Amount)
sd(cote$Amount)/ mean(cote$Amount)
#Let's take a brief look at Simob's purcases compared to the entire set
SIMOB <- df[df$Customer == "SIMOB",]
SIMOB
sum(SIMOB$Amount); mean(SIMOB$Amount)
#Create a dataframe of transactions grouped by customers
df.customers <- df %>%
group_by(Customer) %>%
summarize(total.purchases = sum(Amount), avg.purchase.value = mean(Amount),
total.transactions = n())
#Show the top 10 customers by average transaction value.
top.customers <- top_n(df.customers, 10, avg.purchase.value)
#Brief descriptives on customer purchases
mean(df.customers$total.purchases); sd(df.customers$total.purchases)
hist(df.customers$total.purchases, main= "Histogram of Customer's Total Expenditure",
xlab = "Total Expenditure")
length(unique(df$Product))
#setwd("Documents/active_projects/FERC_assignment")
setwd(getSrcDirectory()[1])
source("analysis.r", chdir = TRUE)
getwd()
setwd("../../..")
getwd()
source("analysis.r", chdir = TRUE)
?source
dir <- dirname(parent.frame(2)$ofile)
?mpg
??mpg
getwd()
setwd("Documents/active_projects/DATS6101_DataScience/hw5")
correlation.matrix <- cor(bike); round(correlation.matrix, 2)
library(dplyr); library("faraway")
bikeorig$Date <- as.Date(bikeorig$Date, format = "%m/%d/%Y")
bikeorig <- read.csv("bikedata.csv")
bikeorig$Date <- as.Date(bikeorig$Date, format = "%m/%d/%Y")
bike <- bikeorig %>% select (everything(), -c(Casual.Users, Registered.Users )) %>% rename(Weekday = Day.of.the.Week, Temp.Feel = Temperature.Feels.F, Temp.F = Temperature.F )
str(bike)
colnames(bike)
summary(bikeorig$Date)
bike %>% filter (Hour > 13, Hour < 19)
correlation.matrix <- cor(bike); round(correlation.matrix, 2)
correlation.matrix <- cor(bike); round(correlation.matrix, 2)
library(corrplot)
correlation.matrix <- cor(bike); round(correlation.matrix, 2)
corrplot(correlation.matrix, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
correlation.matrix <- cor(bike); round(correlation.matrix, 2)
bike <- bikeorig %>% select (everything(), -c(Casual.Users, Registered.Users, Date )) %>% rename(Weekday = Day.of.the.Week, Temp.Feel = Temperature.Feels.F, Temp.F = Temperature.F )
correlation.matrix <- cor(bike); round(correlation.matrix, 2)
library(corrplot)
corrplot(correlation.matrix, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
getwd()
setwd("../eda_project")
library(dplyr); library(ggplot2); library("rgdal"); library("sp") ; library(tmap); library(leaflet)
df <- read.csv("dc_residential_data/DC_properties.csv")
df$SALEDATE <- as.Date(df$SALEDATE)
df$sale.year <- lubridate::year(df$SALEDATE)
#Filter out homes with no price, no full address, or sold earlier than 2015
df <- df %>% filter(!is.na(PRICE), !is.na(FULLADDRESS),  sale.year > 2015)
summary(df$PRICE)
#Identify the dwelling characteristics we are interested in
characteristics <- c("BATHRM", "HF_BATHRM", "AC", "ROOMS", "BEDRM", "AYB", "YR_RMDL",
"EYB", "STORIES", "PRICE", "")
summary(df$sale.year)
boxplot( (log(df$PRICE)~df$sale.year))
#one thing we should consider is measuring whether observations with and without prices
#are signficantly different based on characteristics
map <- readOGR("Neighborhood_Clusters")
df$content <- paste(df$FULLADDRESS, sep = "<br/>", df$PRICE)
m <- leaflet() %>%
addProviderTiles(providers$Esri.NatGeoWorldMap) %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=df$LONGITUDE[1:1000], lat=df$LATITUDE[1:1000], popup=df$content[1:1000],
options = popupOptions(closeButton = FALSE))
m
write.csv(df, "dc_residential_data_clean.csv")
View(df)
df.orig <- df <- read.csv("dc_residential_data/DC_properties.csv")
cor(LANDAREA, GBA, data = df)
cor(df$LANDAREA, df$GBA)
?cor
cor(df$LANDAREA, df$GBA, na.rm = TRUE)
cor(df$LANDAREA, df$GBA, method = "pearson")
cor(df$LANDAREA, df$GBA, method = "pearson")
cor(na.omit(df$LANDAREA), df$GBA, method = "pearson")
cor(na.omit(df$LANDAREA), na.omit(df$GBA), method = "pearson")
cor(df$LANDAREA, df$GBA, method = "pearson")
cor(df$LANDAREA, df$GBA, method = "pearson", use = "complete.obs")
cor(df$LIVING_GBA, df$GBA, method = "pearson", use = "complete.obs")
length(na.omit(df$LIVING_GBA))
summary(df$LIVING_GBA)
length(na.omit(df[,c("LIVING_GBA", "GBA")]))
length(na.omit(df$NUM_UNITS))
summary(df$CITY)
unique(df$CITY)
cor(df$LATITUDE, df$X, method = "pearson", use = "complete.obs")
cor(df$LATITUDE, df$Y, method = "pearson", use = "complete.obs")
unique(df$CENSUS_TRACT)
length(unique(df$CENSUS_TRACT))
unique(df$QUADRANT)
unique(na.omit(df$QUADRANT))
length (unique(na.omit(df$QUADRANT)))
unique(df$QUADRANT)
df <- df[,!drop.list]
drop.list <- c("BLDG_NUM", "SALE_NUM", "USECODE", "GIS_LAST_MOD_DTTM", "CMPLX_NUM",
"LIVING_GBA", "GBA", "CITY", "STATE", "NATIONALGRID", "X","Y",
"ASSESSMENT_SUBNBHD", "CENSUS_TRACT", "CENSUS_BLOCK", "SQUARE", "" )
df <- df[,!drop.list]
df <- df[,!colnames(df) %in% drop.list]
#Convert to factor:
df <- as.factor(df[,convert.fact])
convert.factor <- c("ZIPCODE")
#Convert to factor:
df <- as.factor(df[,convert.factor])
#Convert to factor:
convert.factor <- c("ZIPCODE", "QUALIFIED")
df <- as.factor(df[,convert.factor])
df <- as.factor(df[,colnames(df) %in% convert.factor])
#Convert to factor:
convert.factor <- c("ZIPCODE", "QUALIFIED", "STYLE")
df <- as.factor(df[,colnames(df) %in% convert.factor])
df <- factor(df[,colnames(df) %in% convert.factor])
#Convert to factor:
convert.factor <- c("ZIPCODE", "QUALIFIED", "STYLE", "STRUCTURE")
df <- factor(df[,colnames(df) %in% convert.factor])
library(dplyr); library(ggplot2); library("rgdal"); library("sp") ; library(tmap); library(leaflet)
df.orig <- df <- read.csv("dc_residential_data/DC_properties.csv")
df$SALEDATE <- as.Date(df$SALEDATE)
df$sale.year <- lubridate::year(df$SALEDATE)
#Filter out homes with no price, no full address, or sold earlier than 2015
df %>% filter(!is.na(PRICE), !is.na(FULLADDRESS),  sale.year > 2015)
#Drop variables in drop list
drop.list <- c("BLDG_NUM", "SALE_NUM", "USECODE", "GIS_LAST_MOD_DTTM", "CMPLX_NUM",
"LIVING_GBA", "GBA", "CITY", "STATE", "NATIONALGRID", "X","Y",
"ASSESSMENT_SUBNBHD", "CENSUS_TRACT", "CENSUS_BLOCK", "SQUARE" )
df <- df[,!colnames(df) %in% drop.list]
#Convert to factor:
convert.factor <- c("ZIPCODE", "QUALIFIED", "STYLE", "STRUCTURE")
df <- factor(df[,colnames(df) %in% convert.factor])
df <- factor(df[,colnames(df) %in% convert.factor])
df[,convert.factor] <- factor(df[,convert.factor])
df[,colnames(df) %in% convert.factor]
df[,colnames(df) %in% convert.factor] <- as.factor(df[,colnames(df) %in% convert.factor])
cor(df$PRICE, df[,i], method = "pearson", use = "complete.obs" )
for (i in cor.list){
cor(df$PRICE, df[,i], method = "pearson", use = "complete.obs" )
}
cor.list <- c("BATHRM", "HF_BATHRM", "ROOMS", "BEDRM", "STORIES", "GBA",
"KITCHENS", "FIREPLACES")
for (i in cor.list){
cor(df$PRICE, df[,i], method = "pearson", use = "complete.obs" )
}
cor(df$PRICE, df$i, method = "pearson", use = "complete.obs" )
for (i in cor.list){
cor(df$PRICE, df$i, method = "pearson", use = "complete.obs" )
}
?cor
cor.list <- c(df$BATHRM, df$HF_BATHRM, df$ROOMS, df$BEDRM, df$STORIES, df$GBA,
df$KITCHENS, df$FIREPLACES)
for (i in cor.list){
cor(df$PRICE, i, method = "pearson", use = "complete.obs" )
}
#cor(df$PRICE, i, method = "pearson", use = "complete.obs" )
print(i)
for (i in cor.list){
#cor(df$PRICE, i, method = "pearson", use = "complete.obs" )
print(i)
}
#cor(df$PRICE, i, method = "pearson", use = "complete.obs" )
print(df[,i])
for (i in cor.list){
#cor(df$PRICE, i, method = "pearson", use = "complete.obs" )
print(df[,i])
}
cor.ist <- c("BATHRM")
for (i in cor.list){
#cor(df$PRICE, i, method = "pearson", use = "complete.obs" )
print(df[,i])
}
test <- c("BATHRM")
for (i in test){
#cor(df$PRICE, i, method = "pearson", use = "complete.obs" )
print(df[,i])
}
cor(df$PRICE, i, method = "pearson", use = "complete.obs" )
df$BATHRM
str(df$BATHRM)
for (i in test){
cor(df$PRICE, i, method = "pearson", use = "complete.obs" )
print(df[i])
}
cor(df$PRICE, df$BATHRM, method = "pearson", use = "complete.obs" )
cor(df$BATHRM,df$PRICE, method = "pearson", use = "complete.obs" )
cor(df$GBA,df$PRICE, method = "pearson", use = "complete.obs" )
cor(df$AREA,df$PRICE, method = "pearson", use = "complete.obs" )
cor(df$LANDAREA,df$PRICE, method = "pearson", use = "complete.obs" )
cor(df$BEDRM,df$PRICE, method = "pearson", use = "complete.obs" )
lm(df$PRICE ~ df$BATHRM + df$BEDRM + df$LANDAREA + df$sale.year + df$STORIES)
lm1 <- lm(df$PRICE ~ df$BATHRM + df$BEDRM + df$LANDAREA + df$sale.year + df$STORIES)
summary(lm1)
