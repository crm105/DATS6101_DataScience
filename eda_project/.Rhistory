df <- df %>% filter(!is.na(PRICE), !is.na(FULLADDRESS),  sale.year > 2015, !is.na(QUADRANT), QUADRANT != '')
#Drop variables in drop list
drop.list <- c("BLDG_NUM", "SALE_NUM", "USECODE", "GIS_LAST_MOD_DTTM", "CMPLX_NUM",
"LIVING_GBA", "GBA", "CITY", "STATE", "NATIONALGRID", "X","Y",
"ASSESSMENT_SUBNBHD", "CENSUS_TRACT", "CENSUS_BLOCK", "SQUARE" , "X.1")
df <- df[,!colnames(df) %in% drop.list]
#Convert to factor :
convert.factor <- c("ZIPCODE", "QUALIFIED", "STYLE", "STRUCTURE", "ZIPCODE", "sale.year")
for (i in convert.factor){
df[,i] <- as.factor(df[,i])
}
#code to remove outliers
# df$PRICE <- log(df$PRICE)
# outliers <- c("PRICE")
# lbound <- c()
# ubound <- c()
# IQR <- c()
# for (i in outliers){
#   IQR[i] <- quantile(df[,i],.75, na.rm = TRUE) - quantile(df[,i],.25, na.rm = TRUE)
#   lbound[i] <- as.numeric (quantile(df[,i], .25,na.rm = TRUE) - (2.5 *IQR[i]))
#   ubound[i] <- as.numeric(quantile(df[,i], .75, na.rm = TRUE) + (2.5 * IQR[i]) )
#
# }
# for(i in seq(1:length(outliers))){
#  df <- df[df[,outliers[i]] > lbound & df[,outliers[i]]  < ubound        ,]
# }
summary(df$PRICE)
summary(df$BEDRM)
df[df$PRICE > 25000000,]
#Identify the dwelling characteristics we are interested in
continuous.characteristics <- c("BATHRM", "HF_BATHRM", "ROOMS", "BEDRM", "AYB", "YR_RMDL",
"STORIES", "PRICE")
categorical.characteristics <- c("CNDTN", "SOURCE", "AC", "")
unique(df$GRADE)
unique(df$CNDTN)
summary(df$NUM_UNITS)
map <- readOGR("Neighborhood_Clusters")
df$content <- paste(df$FULLADDRESS, sep = "<br/>", df$PRICE)
# m <- leaflet() %>%
#   addProviderTiles(providers$Esri.NatGeoWorldMap) %>%  # Add default OpenStreetMap map tiles
#   addMarkers(lng=df$LONGITUDE[1:1000], lat=df$LATITUDE[1:1000], popup=df$content[1:1000],
#              options = popupOptions(closeButton = FALSE))
#
# m
#
#
#Include a variable that measures distance from city center
cap.coordinates <- c(38.8899, -77.0091)
df$dist <-( (df$LONGITUDE - cap.coordinates[2])^2 + (df$LATITUDE - cap.coordinates[1])^2)^.5;
df$PRICE <- log(df$PRICE)
df$sale.year <- as.factor(df$sale.year)
#Let's Remove the top and bottom 100 price observations
df <- unique(df)
df <-  df[!df$PRICE %in% tail(sort(df$PRICE),50),]
df <-  df[!df$PRICE %in% head(sort(df$PRICE),50),]
#Use Tukey's method to remove outliers
cont.variables <- c('BATHRM', 'HF_BATHRM', 'ROOMS', 'BEDRM', 'AYB', 'YR_RMDL','EYB', 'STORIES', 'KITCHENS', 'FIREPLACES', 'LANDAREA')
test <- df
df<- test
iqr <- c(); lb <- c(); ub <- c()
for (i in cont.variables){
iqr[i] <- as.numeric ( quantile(df[,i], .75,na.rm = TRUE) -  quantile(df[,i], .25, na.rm = TRUE) )
lb[i] <- as.numeric (quantile(df[,i],.25,na.rm = TRUE) - (1.5 * iqr))
ub[i] <- as.numeric (quantile(df[,i],.75,na.rm = TRUE) + (3 * iqr))
df <- df[df[,i] < ub[i], ]
#df <- df[df[,i] > lb[i], ]
df <- df[df[,i] > 0,]
}
#Title: exploration.R
#Author: Chris Montgomery
#Last Revised: 2/24/2019
#working_directory: ~DATS6101_DataScience/eda_project
#Input: data/dc_residential_data/DC_properties.csv
#Output: data/dc_residential_data_clean.csv
#Description: The file processes DC residential house source data. It drops unecessary variables,
#removes observations prior to 2015, converts categorical variables to factor. Cleaned data is output
#to the above output file.
#Import necessary libraries
library(dplyr); library(ggplot2); library("rgdal"); library("sp") ; library(tmap); library(leaflet)
df.orig <- df <- read.csv("data/dc_residential_data/DC_properties.csv")
df$SALEDATE <- as.Date(df$SALEDATE)
df$sale.year <-  (lubridate::year(df$SALEDATE))
#Filter out homes with no price, no full address, or sold earlier than 2015
df <- df %>% filter(!is.na(PRICE), !is.na(FULLADDRESS),  sale.year > 2015, !is.na(QUADRANT), QUADRANT != '')
#Drop variables in drop list
drop.list <- c("BLDG_NUM", "SALE_NUM", "USECODE", "GIS_LAST_MOD_DTTM", "CMPLX_NUM",
"LIVING_GBA", "GBA", "CITY", "STATE", "NATIONALGRID", "X","Y",
"ASSESSMENT_SUBNBHD", "CENSUS_TRACT", "CENSUS_BLOCK", "SQUARE" , "X.1")
df <- df[,!colnames(df) %in% drop.list]
#Convert to factor :
convert.factor <- c("ZIPCODE", "QUALIFIED", "STYLE", "STRUCTURE", "ZIPCODE", "sale.year")
for (i in convert.factor){
df[,i] <- as.factor(df[,i])
}
#code to remove outliers
# df$PRICE <- log(df$PRICE)
# outliers <- c("PRICE")
# lbound <- c()
# ubound <- c()
# IQR <- c()
# for (i in outliers){
#   IQR[i] <- quantile(df[,i],.75, na.rm = TRUE) - quantile(df[,i],.25, na.rm = TRUE)
#   lbound[i] <- as.numeric (quantile(df[,i], .25,na.rm = TRUE) - (2.5 *IQR[i]))
#   ubound[i] <- as.numeric(quantile(df[,i], .75, na.rm = TRUE) + (2.5 * IQR[i]) )
#
# }
# for(i in seq(1:length(outliers))){
#  df <- df[df[,outliers[i]] > lbound & df[,outliers[i]]  < ubound        ,]
# }
summary(df$PRICE)
summary(df$BEDRM)
df[df$PRICE > 25000000,]
#Identify the dwelling characteristics we are interested in
continuous.characteristics <- c("BATHRM", "HF_BATHRM", "ROOMS", "BEDRM", "AYB", "YR_RMDL",
"STORIES", "PRICE")
categorical.characteristics <- c("CNDTN", "SOURCE", "AC", "")
unique(df$GRADE)
unique(df$CNDTN)
summary(df$NUM_UNITS)
map <- readOGR("Neighborhood_Clusters")
df$content <- paste(df$FULLADDRESS, sep = "<br/>", df$PRICE)
# m <- leaflet() %>%
#   addProviderTiles(providers$Esri.NatGeoWorldMap) %>%  # Add default OpenStreetMap map tiles
#   addMarkers(lng=df$LONGITUDE[1:1000], lat=df$LATITUDE[1:1000], popup=df$content[1:1000],
#              options = popupOptions(closeButton = FALSE))
#
# m
#
#
#Include a variable that measures distance from city center
cap.coordinates <- c(38.8899, -77.0091)
df$dist <-( (df$LONGITUDE - cap.coordinates[2])^2 + (df$LATITUDE - cap.coordinates[1])^2)^.5;
df$PRICE <- log(df$PRICE)
df$sale.year <- as.factor(df$sale.year)
#Let's Remove the top and bottom 100 price observations
df <- unique(df)
df <-  df[!df$PRICE %in% tail(sort(df$PRICE),50),]
df <-  df[!df$PRICE %in% head(sort(df$PRICE),50),]
#Use Tukey's method to remove outliers
cont.variables <- c('BATHRM', 'HF_BATHRM', 'ROOMS', 'BEDRM', 'AYB', 'YR_RMDL','EYB', 'STORIES', 'KITCHENS', 'FIREPLACES', 'LANDAREA')
test <- df
df<- test
iqr <- c(); lb <- c(); ub <- c()
for (i in cont.variables){
iqr[i] <- as.numeric ( quantile(df[,i], .75,na.rm = TRUE) -  quantile(df[,i], .25, na.rm = TRUE) )
lb[i] <- as.numeric (quantile(df[,i],.25,na.rm = TRUE) - (1.5 * iqr))
ub[i] <- as.numeric (quantile(df[,i],.75,na.rm = TRUE) + (3 * iqr))
df <- df[df[,i] < ub[i], ]
#df <- df[df[,i] > lb[i], ]
}
#Some variables logically need to be greater than 0
pos.variables <- c('AYB', 'YR_RMDL','EYB', 'STORIES', 'LANDAREA')
for (i in pos.variables) {
df <- df[df[,i] > 0 , ]
}
write.csv(df, "data/dc_residential_data_clean.csv")
boxplot(BEDRM ~ QUADRANT ,data = df)
pos.variables <- c('AYB', 'YR_RMDL','EYB', 'STORIES', 'LANDAREA', 'BEDRM')
for (i in pos.variables) {
df <- df[df[,i] > 0 , ]
}
test <- df
pos.variables <- c('AYB', 'YR_RMDL','EYB', 'STORIES', 'LANDAREA', 'BEDRM', 'ROOMS')
for (i in pos.variables) {
df <- df[df[,i] > 0 , ]
}
#Title: exploration.R
#Author: Chris Montgomery
#Last Revised: 2/24/2019
#working_directory: ~DATS6101_DataScience/eda_project
#Input: data/dc_residential_data/DC_properties.csv
#Output: data/dc_residential_data_clean.csv
#Description: The file processes DC residential house source data. It drops unecessary variables,
#removes observations prior to 2015, converts categorical variables to factor. Cleaned data is output
#to the above output file.
#Import necessary libraries
library(dplyr); library(ggplot2); library("rgdal"); library("sp") ; library(tmap); library(leaflet)
df.orig <- df <- read.csv("data/dc_residential_data/DC_properties.csv")
df$SALEDATE <- as.Date(df$SALEDATE)
df$sale.year <-  (lubridate::year(df$SALEDATE))
#Filter out homes with no price, no full address, or sold earlier than 2015
df <- df %>% filter(!is.na(PRICE), !is.na(FULLADDRESS),  sale.year > 2015, !is.na(QUADRANT), QUADRANT != '')
#Drop variables in drop list
drop.list <- c("BLDG_NUM", "SALE_NUM", "USECODE", "GIS_LAST_MOD_DTTM", "CMPLX_NUM",
"LIVING_GBA", "GBA", "CITY", "STATE", "NATIONALGRID", "X","Y",
"ASSESSMENT_SUBNBHD", "CENSUS_TRACT", "CENSUS_BLOCK", "SQUARE" , "X.1")
df <- df[,!colnames(df) %in% drop.list]
#Convert to factor :
convert.factor <- c("ZIPCODE", "QUALIFIED", "STYLE", "STRUCTURE", "ZIPCODE", "sale.year")
for (i in convert.factor){
df[,i] <- as.factor(df[,i])
}
#code to remove outliers
# df$PRICE <- log(df$PRICE)
# outliers <- c("PRICE")
# lbound <- c()
# ubound <- c()
# IQR <- c()
# for (i in outliers){
#   IQR[i] <- quantile(df[,i],.75, na.rm = TRUE) - quantile(df[,i],.25, na.rm = TRUE)
#   lbound[i] <- as.numeric (quantile(df[,i], .25,na.rm = TRUE) - (2.5 *IQR[i]))
#   ubound[i] <- as.numeric(quantile(df[,i], .75, na.rm = TRUE) + (2.5 * IQR[i]) )
#
# }
# for(i in seq(1:length(outliers))){
#  df <- df[df[,outliers[i]] > lbound & df[,outliers[i]]  < ubound        ,]
# }
summary(df$PRICE)
summary(df$BEDRM)
df[df$PRICE > 25000000,]
#Identify the dwelling characteristics we are interested in
continuous.characteristics <- c("BATHRM", "HF_BATHRM", "ROOMS", "BEDRM", "AYB", "YR_RMDL",
"STORIES", "PRICE")
categorical.characteristics <- c("CNDTN", "SOURCE", "AC", "")
unique(df$GRADE)
unique(df$CNDTN)
summary(df$NUM_UNITS)
map <- readOGR("Neighborhood_Clusters")
df$content <- paste(df$FULLADDRESS, sep = "<br/>", df$PRICE)
# m <- leaflet() %>%
#   addProviderTiles(providers$Esri.NatGeoWorldMap) %>%  # Add default OpenStreetMap map tiles
#   addMarkers(lng=df$LONGITUDE[1:1000], lat=df$LATITUDE[1:1000], popup=df$content[1:1000],
#              options = popupOptions(closeButton = FALSE))
#
# m
#
#
#Include a variable that measures distance from city center
cap.coordinates <- c(38.8899, -77.0091)
df$dist <-( (df$LONGITUDE - cap.coordinates[2])^2 + (df$LATITUDE - cap.coordinates[1])^2)^.5;
df$PRICE <- log(df$PRICE)
df$sale.year <- as.factor(df$sale.year)
#Let's Remove the top and bottom 100 price observations
df <- unique(df)
df <-  df[!df$PRICE %in% tail(sort(df$PRICE),50),]
df <-  df[!df$PRICE %in% head(sort(df$PRICE),50),]
#Use Tukey's method to remove outliers
cont.variables <- c('BATHRM', 'HF_BATHRM', 'ROOMS', 'BEDRM', 'AYB', 'YR_RMDL','EYB', 'STORIES', 'KITCHENS', 'FIREPLACES', 'LANDAREA')
test <- df
df<- test
iqr <- c(); lb <- c(); ub <- c()
for (i in cont.variables){
iqr[i] <- as.numeric ( quantile(df[,i], .75,na.rm = TRUE) -  quantile(df[,i], .25, na.rm = TRUE) )
lb[i] <- as.numeric (quantile(df[,i],.25,na.rm = TRUE) - (1.5 * iqr))
ub[i] <- as.numeric (quantile(df[,i],.75,na.rm = TRUE) + (3 * iqr))
df <- df[df[,i] < ub[i], ]
#df <- df[df[,i] > lb[i], ]
}
#Some variables logically need to be greater than 0
pos.variables <- c('AYB', 'YR_RMDL','EYB', 'STORIES', 'LANDAREA', 'BEDRM', 'ROOMS')
for (i in pos.variables) {
df <- df[df[,i] > 0 , ]
}
write.csv(df, "data/dc_residential_data_clean.csv")
boxplot(BEDRM ~ QUADRANT ,data = df)
summary(df$BEDRM)
#Title: anova_analysis.R
#author: Chris Montgomery
#Input: 'dc_residential_data_clean.csv'
#Output:
#Description: This script conducts ANOVA and chi-square analyses for household characteristics of
#interest grouped by quadrant
library(tidyverse)
df <- read.csv('data/dc_residential_data_clean.csv')
df$sale.year <- as.factor(df$sale.year)
#Identify continuous variables of interest for anova tests
cont.variables <- c('BATHRM', 'HF_BATHRM', 'ROOMS', 'BEDRM', 'AYB', 'YR_RMDL',
'EYB', 'STORIES', 'PRICE', 'KITCHENS', 'FIREPLACES', 'LANDAREA')
#Identify categorical variables of interest for chi-square tests
cat.variables <- c('HEAT', 'AC', 'GRADE', 'SOURCE', 'sale.year')
#Create an apply function that loops through each categorical variable and runs an ANOVA
chi.test.results <-  lapply(seq(1:length(cat.variables)),function(i){
x <- df[,cat.variables[i]]
y <- df[,"QUADRANT"]
chisq.test(x,y)
})
#This loop runs ANOVA tests for each of our continuous variables
anova.test.results  <-  lapply(seq(1:length(cont.variables)),function(i){
tidy ( (aov (df[,cont.variables[i]] ~ df[,'QUADRANT'])))
})
#This loop creates a data frame that houses the results of the anova tests
p.value <- c()
variable <- c()
for (i in 1:length(anova.test.results)){
variable [i] <- cont.variables[i]
p.value[i] <- as.numeric( anova.test.results[[i]]$p.value[1])
}
anova.results <- as.data.frame (cbind(variable,p.value))
anova.results$null <- ifelse (anova.results$variable == 'FIREPLACES', "Fail to Reject", "Reject")
#This loop produces box plots for each continuous variable in question
p<- c()
for(i in cont.variables){
print (ggplot(df, aes(x= QUADRANT, y = df[,i] )) + geom_boxplot()+ ylab(i) )
}
summary(df$FIREPLACES)
#Title: exploration.R
#Author: Chris Montgomery
#Last Revised: 2/24/2019
#working_directory: ~DATS6101_DataScience/eda_project
#Input: data/dc_residential_data/DC_properties.csv
#Output: data/dc_residential_data_clean.csv
#Description: The file processes DC residential house source data. It drops unecessary variables,
#removes observations prior to 2015, converts categorical variables to factor. Cleaned data is output
#to the above output file.
#Import necessary libraries
library(dplyr); library(ggplot2); library("rgdal"); library("sp") ; library(tmap); library(leaflet)
df.orig <- df <- read.csv("data/dc_residential_data/DC_properties.csv")
df$SALEDATE <- as.Date(df$SALEDATE)
df$sale.year <-  (lubridate::year(df$SALEDATE))
#Filter out homes with no price, no full address, or sold earlier than 2015
df <- df %>% filter(!is.na(PRICE), !is.na(FULLADDRESS),  sale.year > 2015, !is.na(QUADRANT), QUADRANT != '')
#Drop variables in drop list
drop.list <- c("BLDG_NUM", "SALE_NUM", "USECODE", "GIS_LAST_MOD_DTTM", "CMPLX_NUM",
"LIVING_GBA", "GBA", "CITY", "STATE", "NATIONALGRID", "X","Y",
"ASSESSMENT_SUBNBHD", "CENSUS_TRACT", "CENSUS_BLOCK", "SQUARE" , "X.1")
df <- df[,!colnames(df) %in% drop.list]
#Convert to factor :
convert.factor <- c("ZIPCODE", "QUALIFIED", "STYLE", "STRUCTURE", "ZIPCODE", "sale.year")
for (i in convert.factor){
df[,i] <- as.factor(df[,i])
}
#code to remove outliers
# df$PRICE <- log(df$PRICE)
# outliers <- c("PRICE")
# lbound <- c()
# ubound <- c()
# IQR <- c()
# for (i in outliers){
#   IQR[i] <- quantile(df[,i],.75, na.rm = TRUE) - quantile(df[,i],.25, na.rm = TRUE)
#   lbound[i] <- as.numeric (quantile(df[,i], .25,na.rm = TRUE) - (2.5 *IQR[i]))
#   ubound[i] <- as.numeric(quantile(df[,i], .75, na.rm = TRUE) + (2.5 * IQR[i]) )
#
# }
# for(i in seq(1:length(outliers))){
#  df <- df[df[,outliers[i]] > lbound & df[,outliers[i]]  < ubound        ,]
# }
summary(df$PRICE)
summary(df$BEDRM)
df[df$PRICE > 25000000,]
#Identify the dwelling characteristics we are interested in
continuous.characteristics <- c("BATHRM", "HF_BATHRM", "ROOMS", "BEDRM", "AYB", "YR_RMDL",
"STORIES", "PRICE")
categorical.characteristics <- c("CNDTN", "SOURCE", "AC", "")
unique(df$GRADE)
unique(df$CNDTN)
summary(df$NUM_UNITS)
map <- readOGR("Neighborhood_Clusters")
df$content <- paste(df$FULLADDRESS, sep = "<br/>", df$PRICE)
# m <- leaflet() %>%
#   addProviderTiles(providers$Esri.NatGeoWorldMap) %>%  # Add default OpenStreetMap map tiles
#   addMarkers(lng=df$LONGITUDE[1:1000], lat=df$LATITUDE[1:1000], popup=df$content[1:1000],
#              options = popupOptions(closeButton = FALSE))
#
# m
#
#
#Include a variable that measures distance from city center
cap.coordinates <- c(38.8899, -77.0091)
df$dist <-( (df$LONGITUDE - cap.coordinates[2])^2 + (df$LATITUDE - cap.coordinates[1])^2)^.5;
df$PRICE <- log(df$PRICE)
df$sale.year <- as.factor(df$sale.year)
#Let's Remove the top and bottom 100 price observations
df <- unique(df)
df <-  df[!df$PRICE %in% tail(sort(df$PRICE),50),]
df <-  df[!df$PRICE %in% head(sort(df$PRICE),50),]
#Use Tukey's method to remove outliers
cont.variables <- c('BATHRM', 'HF_BATHRM', 'ROOMS', 'BEDRM', 'AYB', 'YR_RMDL','EYB', 'STORIES', 'KITCHENS', 'FIREPLACES', 'LANDAREA')
test <- df
df<- test
iqr <- c(); lb <- c(); ub <- c()
for (i in cont.variables){
iqr[i] <- as.numeric ( quantile(df[,i], .75,na.rm = TRUE) -  quantile(df[,i], .25, na.rm = TRUE) )
lb[i] <- as.numeric (quantile(df[,i],.25,na.rm = TRUE) - (1.5 * iqr))
ub[i] <- as.numeric (quantile(df[,i],.75,na.rm = TRUE) + (3 * iqr))
df <- df[df[,i] < ub[i], ]
df <- df[df[,i] > lb[i], ]
}
#Some variables logically need to be greater than 0
pos.variables <- c('AYB', 'YR_RMDL','EYB', 'STORIES', 'LANDAREA', 'BEDRM', 'ROOMS')
for (i in pos.variables) {
df <- df[df[,i] > 0 , ]
}
write.csv(df, "data/dc_residential_data_clean.csv")
boxplot(BEDRM ~ QUADRANT ,data = df)
#Title: exploration.R
#Author: Chris Montgomery
#Last Revised: 2/24/2019
#working_directory: ~DATS6101_DataScience/eda_project
#Input: data/dc_residential_data/DC_properties.csv
#Output: data/dc_residential_data_clean.csv
#Description: The file processes DC residential house source data. It drops unecessary variables,
#removes observations prior to 2015, converts categorical variables to factor. Cleaned data is output
#to the above output file.
#Import necessary libraries
library(dplyr); library(ggplot2); library("rgdal"); library("sp") ; library(tmap); library(leaflet)
df.orig <- df <- read.csv("data/dc_residential_data/DC_properties.csv")
df$SALEDATE <- as.Date(df$SALEDATE)
df$sale.year <-  (lubridate::year(df$SALEDATE))
#Filter out homes with no price, no full address, or sold earlier than 2015
df <- df %>% filter(!is.na(PRICE), !is.na(FULLADDRESS),  sale.year > 2015, !is.na(QUADRANT), QUADRANT != '')
#Drop variables in drop list
drop.list <- c("BLDG_NUM", "SALE_NUM", "USECODE", "GIS_LAST_MOD_DTTM", "CMPLX_NUM",
"LIVING_GBA", "GBA", "CITY", "STATE", "NATIONALGRID", "X","Y",
"ASSESSMENT_SUBNBHD", "CENSUS_TRACT", "CENSUS_BLOCK", "SQUARE" , "X.1")
df <- df[,!colnames(df) %in% drop.list]
#Convert to factor :
convert.factor <- c("ZIPCODE", "QUALIFIED", "STYLE", "STRUCTURE", "ZIPCODE", "sale.year")
for (i in convert.factor){
df[,i] <- as.factor(df[,i])
}
#code to remove outliers
# df$PRICE <- log(df$PRICE)
# outliers <- c("PRICE")
# lbound <- c()
# ubound <- c()
# IQR <- c()
# for (i in outliers){
#   IQR[i] <- quantile(df[,i],.75, na.rm = TRUE) - quantile(df[,i],.25, na.rm = TRUE)
#   lbound[i] <- as.numeric (quantile(df[,i], .25,na.rm = TRUE) - (2.5 *IQR[i]))
#   ubound[i] <- as.numeric(quantile(df[,i], .75, na.rm = TRUE) + (2.5 * IQR[i]) )
#
# }
# for(i in seq(1:length(outliers))){
#  df <- df[df[,outliers[i]] > lbound & df[,outliers[i]]  < ubound        ,]
# }
summary(df$PRICE)
summary(df$BEDRM)
df[df$PRICE > 25000000,]
#Identify the dwelling characteristics we are interested in
continuous.characteristics <- c("BATHRM", "HF_BATHRM", "ROOMS", "BEDRM", "AYB", "YR_RMDL",
"STORIES", "PRICE")
categorical.characteristics <- c("CNDTN", "SOURCE", "AC", "")
unique(df$GRADE)
unique(df$CNDTN)
summary(df$NUM_UNITS)
map <- readOGR("Neighborhood_Clusters")
df$content <- paste(df$FULLADDRESS, sep = "<br/>", df$PRICE)
# m <- leaflet() %>%
#   addProviderTiles(providers$Esri.NatGeoWorldMap) %>%  # Add default OpenStreetMap map tiles
#   addMarkers(lng=df$LONGITUDE[1:1000], lat=df$LATITUDE[1:1000], popup=df$content[1:1000],
#              options = popupOptions(closeButton = FALSE))
#
# m
#
#
#Include a variable that measures distance from city center
cap.coordinates <- c(38.8899, -77.0091)
df$dist <-( (df$LONGITUDE - cap.coordinates[2])^2 + (df$LATITUDE - cap.coordinates[1])^2)^.5;
df$PRICE <- log(df$PRICE)
df$sale.year <- as.factor(df$sale.year)
#Let's Remove the top and bottom 100 price observations
df <- unique(df)
df <-  df[!df$PRICE %in% tail(sort(df$PRICE),50),]
df <-  df[!df$PRICE %in% head(sort(df$PRICE),50),]
#Use Tukey's method to remove outliers
cont.variables <- c('BATHRM', 'HF_BATHRM', 'ROOMS', 'BEDRM', 'AYB', 'YR_RMDL','EYB', 'STORIES', 'KITCHENS', 'FIREPLACES', 'LANDAREA')
test <- df
df<- test
iqr <- c(); lb <- c(); ub <- c()
for (i in cont.variables){
iqr[i] <- as.numeric ( quantile(df[,i], .75,na.rm = TRUE) -  quantile(df[,i], .25, na.rm = TRUE) )
lb[i] <- as.numeric (quantile(df[,i],.25,na.rm = TRUE) - (5 * iqr))
ub[i] <- as.numeric (quantile(df[,i],.75,na.rm = TRUE) + (3 * iqr))
df <- df[df[,i] < ub[i], ]
df <- df[df[,i] > lb[i], ]
}
#Some variables logically need to be greater than 0
pos.variables <- c('AYB', 'YR_RMDL','EYB', 'STORIES', 'LANDAREA', 'BEDRM', 'ROOMS')
for (i in pos.variables) {
df <- df[df[,i] > 0 , ]
}
write.csv(df, "data/dc_residential_data_clean.csv")
boxplot(BEDRM ~ QUADRANT ,data = df)
#Title: anova_analysis.R
#author: Chris Montgomery
#Input: 'dc_residential_data_clean.csv'
#Output:
#Description: This script conducts ANOVA and chi-square analyses for household characteristics of
#interest grouped by quadrant
library(tidyverse)
df <- read.csv('data/dc_residential_data_clean.csv')
df$sale.year <- as.factor(df$sale.year)
#Identify continuous variables of interest for anova tests
cont.variables <- c('BATHRM', 'HF_BATHRM', 'ROOMS', 'BEDRM', 'AYB', 'YR_RMDL',
'EYB', 'STORIES', 'PRICE', 'KITCHENS', 'FIREPLACES', 'LANDAREA')
#Identify categorical variables of interest for chi-square tests
cat.variables <- c('HEAT', 'AC', 'GRADE', 'SOURCE', 'sale.year')
#Create an apply function that loops through each categorical variable and runs an ANOVA
chi.test.results <-  lapply(seq(1:length(cat.variables)),function(i){
x <- df[,cat.variables[i]]
y <- df[,"QUADRANT"]
chisq.test(x,y)
})
#This loop runs ANOVA tests for each of our continuous variables
anova.test.results  <-  lapply(seq(1:length(cont.variables)),function(i){
tidy ( (aov (df[,cont.variables[i]] ~ df[,'QUADRANT'])))
})
#This loop creates a data frame that houses the results of the anova tests
p.value <- c()
variable <- c()
for (i in 1:length(anova.test.results)){
variable [i] <- cont.variables[i]
p.value[i] <- as.numeric( anova.test.results[[i]]$p.value[1])
}
anova.results <- as.data.frame (cbind(variable,p.value))
anova.results$null <- ifelse (anova.results$variable == 'FIREPLACES', "Fail to Reject", "Reject")
#This loop produces box plots for each continuous variable in question
p<- c()
for(i in cont.variables){
print (ggplot(df, aes(x= QUADRANT, y = df[,i] )) + geom_boxplot()+ ylab(i) )
}
summary(df$FIREPLACES)
